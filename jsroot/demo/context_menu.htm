<!DOCTYPE html>
<html lang="en">
   <head>
      <meta charset="UTF-8">
      <title>Custom context menu example</title>
      <link rel="shortcut icon" href="../img/RootIcon.ico"/>
      <script type="text/javascript" src="../scripts/JSRoot.core.js"></script>
   </head>
   <body>
      <div id="guiDiv" path="../../files/" files="ct.root;exclusion.root;fillrandom.root;glbox.root;graph.root;hsimple.root;legends.root;rf107.root;stacks.root;zdemo.root">
         loading scripts ...
      </div>
      <script type="text/javascript">
         // build standard GUI, open ROOT file and display histogram

         let hh = null;

         JSROOT.buildGUI("guiDiv")
               .then(hpainter => { hh = hpainter; return hh.openRootFile("../../files/hsimple.root"); })
               .then(() => hh.display("hpxpy;1", "colz"));

         // assign new context menu handler for TH2 drawing
         JSROOT.require('hist').then(() => {
            JSROOT.TH2Painter.prototype.oldFillHistContextMenu = JSROOT.TH2Painter.prototype.fillHistContextMenu;

            JSROOT.TH2Painter.prototype.fillHistContextMenu = function(menu) {
               let itemname = this.getItemName();
               if ((typeof itemname == "string") && (itemname.indexOf("hpxpy") >= 0)) {
                  let tip = menu.painter.getToolTip(menu.getEventPosition());

                  // example how to get label from bin index
                  // if (tip.binx !== undefined) console.log('binx as text', menu.painter.getFramePainter().axisAsText("x", tip.binx));
                  // if (tip.biny !== undefined) console.log('biny as text', menu.painter.getFramePainter().axisAsText("y", tip.biny));

                  console.log('Hist context menu for', itemname, tip.binx, tip.biny, tip.cont);

                  menu.add(`sub:Histogram bin [${tip.binx}, ${tip.biny}]`, () => menu.painter.provideSpecialDrawArea());
                  menu.add("Show hpx", () => menu.painter.provideSpecialDrawArea("bottom").then(() => hh.getObject("hpx")).then(res => menu.painter.drawInSpecialArea(res.obj, "*H")));
                  menu.add("Show hprof", () => menu.painter.provideSpecialDrawArea("left").then(() => hh.getObject("hprof")).then(res => menu.painter.drawInSpecialArea(res.obj, "E")));
                  menu.add("Close extra area", () => menu.painter.provideSpecialDrawArea());
                  menu.add("endsub:");
               }
               return this.oldFillHistContextMenu(menu);
            }
         });
      </script>
   </body>
</html>
