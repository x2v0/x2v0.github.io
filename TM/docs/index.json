{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/TM/TM.BufferChunk.html": {
    "href": "api/TM/TM.BufferChunk.html",
    "title": "Class BufferChunk",
    "keywords": "Class BufferChunk Overview: ---------------------------------------------------------------- BufferChunk is a helper class created to make network calls in DotNet easier by allowing byte[] to be passed around along with an index (or offset) and length (or chunksize). Members: ---------------------------------------------------------------- - index - offset inside the buffer where valid data starts - length - amount of valid data - buffer - byte[] containing the data Except for constructors (which set index and length member variables), when index and length are passed as parameters, they are used as offsets into the valid data, not offsets into the buffer. Object State: ---------------------------------------------------------------- BufferChunk does not accept or return null or zero-length objects. However, it is valid for a BufferChunk to be in a state where it has no data to manipulate i.e. length == 0 this.index + this.length cannot be > buffer.Length index + length cannot be > this.length when manipulating inside the valid data index must be >= 0 length must be >= 0 Integral types: -------------------------------------------------------------- BufferChunk allows the reading and writing of integral types (Int16, Int32, Int64 and the unsigned counterparts) into the byte[]. Implements the System.IDisposable Implements the System.ICloneable Inheritance System.Object BufferChunk Implements System.IDisposable System.ICloneable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TM Assembly : TM.dll Syntax [ComVisible(false)] public class BufferChunk : IDisposable, ICloneable Constructors | Improve this Doc View Source BufferChunk(Byte[]) Constructor, create a BufferChunk using an existing byte[] without performing a memcopy Declaration public BufferChunk(byte[] buffer) Parameters Type Name Description System.Byte [] buffer byte[] to be used as the data store for the BufferChunk, cannot be null or zero length Examples byte[] buffer = new byte[2000]; BufferChunk bufferChunk = new BufferChunk(buffer); | Improve this Doc View Source BufferChunk(Byte[], Int32, Int32) Constructor, create a BufferChunk from its constituent parts Declaration public BufferChunk(byte[] buffer, int index, int length) Parameters Type Name Description System.Byte [] buffer byte[] to be used as the data store for the BufferChunk System.Int32 index offset at which the valid data starts System.Int32 length amount of 'valid data' Examples byte[] buffer = new byte[2000]; BufferChunk bufferChunk = new BufferChunk(buffer, 10, 200); | Improve this Doc View Source BufferChunk(Int32) Constructor, create a new BufferChunk and allocate a new byte[] to hold the data. Declaration public BufferChunk(int size = 1024) Parameters Type Name Description System.Int32 size int size of the new byte[] to create, must be >= 1 Examples BufferChunk bufferChunk = new BufferChunk(2000); Properties | Improve this Doc View Source Buffer Buffer gives you direct access to the byte[] which is storing the raw data of the BufferChunk. Buffer is simply a byte[] that is passed ByRef so you have easy and efficient access to the basic data. Note: This property may be removed going forward Declaration public byte[] Buffer { get; set; } Property Value Type Description System.Byte [] The buffer. Examples public int SendTo(BufferChunk bufferChunk, EndPoint endPoint) { return SendTo(bufferChunk.Buffer, bufferChunk.Index, bufferChunk.Length, SocketFlags.None, endPoint); } | Improve this Doc View Source Index Index points to the start of the valid data area Note: This property may be removed going forward Declaration public int Index { get; set; } Property Value Type Description System.Int32 The index. Examples public int SendTo(BufferChunk bufferChunk, EndPoint endPoint) { return SendTo(bufferChunk.Buffer, bufferChunk.Index, bufferChunk.Length, SocketFlags.None, endPoint); } | Improve this Doc View Source Item[Int32] Indexer used to allow us to treat a BufferChunk like a byte[]. Useful when making in place modifications or reads from a BufferChunk. Declaration public byte this[int index] { get; set; } Parameters Type Name Description System.Int32 index The index. Property Value Type Description System.Byte System.Byte. | Improve this Doc View Source Length Length is amount of valid data in the buffer Length should not be directly manipulated to select smaller sections of the BufferChunk because this would abandon valid data. Instead, you should use the method Peek(Int32, Int32) to create a shallow copy new BufferChunk pointing to just the section you want. Note: This property may be removed going forward Declaration public int Length { get; set; } Property Value Type Description System.Int32 The length. Examples public int SendTo(BufferChunk bufferChunk, EndPoint endPoint) { return SendTo(bufferChunk.Buffer, bufferChunk.Index, bufferChunk.Length, SocketFlags.None, endPoint); } Methods | Improve this Doc View Source Clear() Used to zero out the data area of the BufferChunk. Declaration public void Clear() | Improve this Doc View Source Clone() Creates a shallow copy (new Index and Length, duplicate reference to the same Buffer) of a BufferChunk. Declaration public object Clone() Returns Type Description System.Object BufferChunk instance with ref Buffer, ByVal Index, and ByVal Length | Improve this Doc View Source Compare(Byte[], Byte[]) Compares the specified obj1. Declaration public static bool Compare(byte[] obj1, byte[] obj2) Parameters Type Name Description System.Byte [] obj1 The obj1. System.Byte [] obj2 The obj2. Returns Type Description System.Boolean true if XXXX, false otherwise | Improve this Doc View Source Copy(Byte[]) Copies the specified source. Declaration public static byte[] Copy(byte[] source) Parameters Type Name Description System.Byte [] source The source. Returns Type Description System.Byte [] System.Byte[][]. | Improve this Doc View Source CopyFrom(IntPtr, Int32) Copies from. Declaration public void CopyFrom(IntPtr src, int length) Parameters Type Name Description System.IntPtr src The SRC. System.Int32 length The length. | Improve this Doc View Source CopyTo(IntPtr, Int32) Copies to. Declaration public void CopyTo(IntPtr dest, int length) Parameters Type Name Description System.IntPtr dest The dest. System.Int32 length The length. | Improve this Doc View Source CopyTo(BufferChunk, Int32) Copy the valid data section of 'this' to the destination BufferChunk overwriting dest's previous contents This method does not allow dest's valid data section to grow or shrink (i.e. treat valid data as a fixed buffer) Declaration public void CopyTo(BufferChunk destination, int index) Parameters Type Name Description BufferChunk destination BufferChunk System.Int32 index offset in the destination BufferChunk's valid data | Improve this Doc View Source Dispose() Disposes the internal state of the object Declaration public void Dispose() | Improve this Doc View Source GetByte(Int32) Retrieves 1 byte from inside the BufferChunk This method is included for consistency. It simply forwards to the indexer. Declaration public byte GetByte(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.Byte System.Byte. | Improve this Doc View Source GetDouble(Int32) Retrieves 8 bytes inside the BufferChunk Declaration public double GetDouble(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.Double System.Double. | Improve this Doc View Source GetFloat(Int32) Retrieves 4 bytes inside the BufferChunk Declaration public float GetFloat(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.Single System.Single. | Improve this Doc View Source GetInt16(Int32) Retrieves 2 bytes inside the BufferChunk Declaration public short GetInt16(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.Int16 System.Int16. | Improve this Doc View Source GetInt32(Int32) Retrieves 4 bytes inside the BufferChunk Declaration public int GetInt32(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.Int32 System.Int32. | Improve this Doc View Source GetInt64(Int32) Retrieves 8 bytes inside the BufferChunk Declaration public long GetInt64(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.Int64 System.Int64. | Improve this Doc View Source GetPaddedUInt16(Int32) Gets the padded U int16. Declaration public ushort GetPaddedUInt16(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description System.UInt16 System.UInt16. | Improve this Doc View Source GetPaddedUInt32(Int32) Gets the padded UInt32. Declaration public uint GetPaddedUInt32(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description System.UInt32 System.UInt32. | Improve this Doc View Source GetPaddedUInt64(Int32) Gets the padded UInt64. Declaration public ulong GetPaddedUInt64(int index) Parameters Type Name Description System.Int32 index The index. Returns Type Description System.UInt64 System.UInt64. | Improve this Doc View Source GetUInt16(Int32) Retrieves 2 bytes inside the BufferChunk Declaration public ushort GetUInt16(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.UInt16 System.UInt16. | Improve this Doc View Source GetUInt32(Int32) Retrieves 4 bytes inside the BufferChunk Declaration public uint GetUInt32(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.UInt32 System.UInt32. | Improve this Doc View Source GetUInt64(Int32) Retrieves 8 bytes inside the BufferChunk Declaration public ulong GetUInt64(int index) Parameters Type Name Description System.Int32 index Offset into the valid data Returns Type Description System.UInt64 System.UInt64. | Improve this Doc View Source GetUTF8String(Int32, Int32) Retrieves length bytes from inside the BufferChunk and converts from UTF8 string Declaration public string GetUTF8String(int index, int length) Parameters Type Name Description System.Int32 index Offset into the valid data System.Int32 length The length. Returns Type Description System.String System.String. | Improve this Doc View Source NextBufferChunk(Int32) Returns a BufferChunk consisting of the next 'length' bytes of the BufferChunk instance. Automatically increments Index and decrements Length. This function is useful for iterative functions that parse through a large BufferChunk returning smaller BufferChunks Declaration public BufferChunk NextBufferChunk(int length) Parameters Type Name Description System.Int32 length int Returns Type Description BufferChunk BufferChunk Examples ... frameBuffer = new BufferChunk(500000); ... int packetsInFrame = (ushort)((frameBuffer.Length + RtpHeaderExtensionSize) / (MaximumPacketPayload)); if (((frameBuffer.Length + RtpHeaderExtensionSize) % (MaximumPacketPayload)) > 0) packetsInFrame++; for (int i = 0; i < packetsInFrame; i++) { int sizeToCopy = (frameBuffer.Length < MaximumPacketPayload) ? frameBuffer.Length : MaximumPacketPayload; socket.Send((byte[])frameBuffer.NextBufferChunk(sizeToCopy)); } | Improve this Doc View Source NextBufferChunkMax(Int32) Declaration public BufferChunk NextBufferChunkMax(int length) Parameters Type Name Description System.Int32 length Returns Type Description BufferChunk | Improve this Doc View Source NextByte() Nexts the byte. Declaration public byte NextByte() Returns Type Description System.Byte System.Byte. | Improve this Doc View Source NextDouble() Nexts the Double. Declaration public double NextDouble() Returns Type Description System.Double System.Double. | Improve this Doc View Source NextFloat() Nexts the float. Declaration public float NextFloat() Returns Type Description System.Single System.Single. | Improve this Doc View Source NextInt16() Nexts the Int16. Declaration public short NextInt16() Returns Type Description System.Int16 System.Int16. | Improve this Doc View Source NextInt32() Nexts the Int32. Declaration public int NextInt32() Returns Type Description System.Int32 System.Int32. | Improve this Doc View Source NextInt64() Nexts the Int64. Declaration public long NextInt64() Returns Type Description System.Int64 System.Int64. | Improve this Doc View Source NextUInt16() Nexts the UInt16. Declaration public ushort NextUInt16() Returns Type Description System.UInt16 System.UInt16. | Improve this Doc View Source NextUInt32() Nexts the UInt32. Declaration public uint NextUInt32() Returns Type Description System.UInt32 System.UInt32. | Improve this Doc View Source NextUInt64() Nexts the UInt64. Declaration public ulong NextUInt64() Returns Type Description System.UInt64 System.UInt64. | Improve this Doc View Source NextUtf8String(Int32) Nexts the UTF8 string. Declaration public string NextUtf8String(int length) Parameters Type Name Description System.Int32 length The length. Returns Type Description System.String System.String. | Improve this Doc View Source Peek(Int32, Int32) Create a return BufferChunk containing a subset of the data from the valid data. Declaration public BufferChunk Peek(int index, int length) Parameters Type Name Description System.Int32 index int index into the valid data area System.Int32 length int length of the data to copy Returns Type Description BufferChunk BufferChunk length Length that was extracted from the source BufferChunk | Improve this Doc View Source Reset() Reset the BufferChunk's Index and Length pointers to zero so it is ready for reuse as an empty BufferChunk. Note that the actual byte[] buffer is not reset, so the memory is not deallocated/reallocated, allowing for more efficient reuse of memory without abusing the GC Declaration public void Reset() | Improve this Doc View Source Reset(Int32, Int32) Reset the BufferChunk's Index and Length pointers to supplied values Declaration public void Reset(int index, int length) Parameters Type Name Description System.Int32 index The index. System.Int32 length The length. | Improve this Doc View Source SetByte(Int32, Byte) Modifies 1 byte inside the BufferChunk This method is included for consistency. It simply forwards to the indexer. Declaration public void SetByte(int index, byte data) Parameters Type Name Description System.Int32 index Offset into the valid data System.Byte data Value to write at index | Improve this Doc View Source SetInt16(Int32, Int16) Modifies 2 bytes inside the BufferChunk Declaration public void SetInt16(int index, short data) Parameters Type Name Description System.Int32 index Offset into the valid data System.Int16 data Value to write at index | Improve this Doc View Source SetInt32(Int32, Int32) Modifies 4 bytes inside the BufferChunk Declaration public void SetInt32(int index, int data) Parameters Type Name Description System.Int32 index Offset into the valid data System.Int32 data Value to write at index | Improve this Doc View Source SetInt64(Int32, Int64) Modifies 8 bytes inside the BufferChunk Declaration public void SetInt64(int index, long data) Parameters Type Name Description System.Int32 index Offset into the valid data System.Int64 data Value to write at index | Improve this Doc View Source SetNetworking(Boolean) Sets the networking. Declaration public static void SetNetworking(bool v = true) Parameters Type Name Description System.Boolean v if set to true [v]. | Improve this Doc View Source SetPaddedUInt16(Int32, UInt16) Declaration public void SetPaddedUInt16(int index, ushort data) Parameters Type Name Description System.Int32 index System.UInt16 data | Improve this Doc View Source SetPaddedUInt32(Int32, UInt32) Sets the padded UInt32. Declaration public void SetPaddedUInt32(int index, uint data) Parameters Type Name Description System.Int32 index The index. System.UInt32 data The data. | Improve this Doc View Source SetPaddedUInt64(Int32, UInt64) Sets the padded UInt64. Declaration public void SetPaddedUInt64(int index, ulong data) Parameters Type Name Description System.Int32 index The index. System.UInt64 data The data. | Improve this Doc View Source SetUInt16(Int32, UInt16) Modifies 2 bytes inside the BufferChunk Declaration public void SetUInt16(int index, ushort data) Parameters Type Name Description System.Int32 index Offset into the valid data System.UInt16 data Value to write at index | Improve this Doc View Source SetUInt32(Int32, UInt32) Modifies 4 bytes inside the BufferChunk Declaration public void SetUInt32(int index, uint data) Parameters Type Name Description System.Int32 index Offset into the valid data System.UInt32 data Value to write at index | Improve this Doc View Source SetUInt64(Int32, UInt64) Modifies 8 bytes inside the BufferChunk Declaration public void SetUInt64(int index, ulong data) Parameters Type Name Description System.Int32 index Offset into the valid data System.UInt64 data Value to write at index | Improve this Doc View Source SetUTF8String(Int32, String) Modifies UTF8.GetBytes(data) bytes inside the BufferChunk Declaration public void SetUTF8String(int index, string data) Parameters Type Name Description System.Int32 index Offset into the valid data System.String data Value to write at index | Improve this Doc View Source Skip(Int32) Skips the specified length. Declaration public void Skip(int len) Parameters Type Name Description System.Int32 len The length. Operators | Improve this Doc View Source Addition(BufferChunk, Byte) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, byte b) Parameters Type Name Description BufferChunk destination The destination. System.Byte b The b. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, Byte[]) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, byte[] source) Parameters Type Name Description BufferChunk destination The destination. System.Byte [] source The source. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, Double) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, double data) Parameters Type Name Description BufferChunk destination The destination. System.Double data The data. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, Int16) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, short data) Parameters Type Name Description BufferChunk destination The destination. System.Int16 data The data. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, Int32) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, int data) Parameters Type Name Description BufferChunk destination The destination. System.Int32 data The data. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, Int64) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, long data) Parameters Type Name Description BufferChunk destination The destination. System.Int64 data The data. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, Single) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, float data) Parameters Type Name Description BufferChunk destination The destination. System.Single data The data. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, String) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, string s) Parameters Type Name Description BufferChunk destination The destination. System.String s The s. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, UInt16) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, ushort data) Parameters Type Name Description BufferChunk destination The destination. System.UInt16 data The data. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, UInt32) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, uint data) Parameters Type Name Description BufferChunk destination The destination. System.UInt32 data The data. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, UInt64) Implements the +. Declaration public static BufferChunk operator +(BufferChunk destination, ulong data) Parameters Type Name Description BufferChunk destination The destination. System.UInt64 data The data. Returns Type Description BufferChunk The result of the operator. | Improve this Doc View Source Addition(BufferChunk, BufferChunk) Override + and += operator to allow appending of buffers, provided there is room in the left-most BufferChunk Declaration public static BufferChunk operator +(BufferChunk destination, BufferChunk source) Parameters Type Name Description BufferChunk destination BufferChunk destination that will be appended to BufferChunk source BufferChunk source Returns Type Description BufferChunk Reference to BufferChunk destination | Improve this Doc View Source Explicit(Byte[] to BufferChunk) Explicitly cast a byte[] into a BufferChunk. Useful when you want to start acting upon a byte[] in an incremental fashion by taking advantage of The functionality a BufferChunk provides over a byte[]. For instance, this is useful for aking a large (say 500k) dataset and dividing it up into smaller (say 1.5k) chunks. This is functionally equivalent to new BufferChunk(buffer) Declaration public static explicit operator BufferChunk(byte[] buffer) Parameters Type Name Description System.Byte [] buffer byte[] buffer containing valid data Returns Type Description BufferChunk BufferChunk | Improve this Doc View Source Explicit(String to BufferChunk) Explicitly cast a string to a BufferChunk. Helpful for applications that want to send strings or XML over the network without worrying about the String to UTF8 logic. Declaration public static explicit operator BufferChunk(string source) Parameters Type Name Description System.String source The source. Returns Type Description BufferChunk The result of the conversion. | Improve this Doc View Source Explicit(BufferChunk to Byte[]) Explicitly cast the valid data into a new byte[]. This function creates a copy of the BufferChunk data and omits the bytes before the Index and after the Length from the byte[] copy. This is a simple way to interoperate BufferChunks with functions that only know how to deal with byte[]. Declaration public static explicit operator byte[](BufferChunk source) Parameters Type Name Description BufferChunk source BufferChunk Returns Type Description System.Byte [] byte[] containing the valid data from the BufferChunk Examples using P; using System.Net.Sockets; Socket socket = new Socket(...); // This standard socket only knows byte[] BufferChunk bufferChunk = new bufferChunk(500); // Create a new BufferChunk containing a 500 byte buffer socket.Send((byte[])bufferChunk, SocketFlags.None); //Note the explicit cast from BufferChunk to byte[] | Improve this Doc View Source Explicit(BufferChunk to String) Explicitly cast the valid data to a string. Helpful for applications that want to send strings or XML over the network without worrying about the String to UTF8 logic. Declaration public static explicit operator string (BufferChunk source) Parameters Type Name Description BufferChunk source BufferChunk containing the data Returns Type Description System.String string form of data Examples BufferChunk bc = new BufferChunk(new byte[] {74, 97, 115, 111, 110}); if((string)bc == \"Jason\")... Implements System.IDisposable System.ICloneable Extension Methods BufferChunkExt.Add(BufferChunk, PacketHeader) BufferChunkExt.MC_PT_ILH(BufferChunk) BufferChunkExt.NextPacketHeader(BufferChunk) BufferChunkExt.StateData(BufferChunk) PlanExt.Add(BufferChunk, Spot) PlanExt.NextResultSpot(BufferChunk) PlanExt.NextSpot(BufferChunk) PlanExt.NextSpotFull(BufferChunk) PlanExt.NextSpotResult(BufferChunk) See Also System.IDisposable System.ICloneable System.IDisposable System.ICloneable"
  },
  "api/TM/TM.BufferChunkExt.html": {
    "href": "api/TM/TM.BufferChunkExt.html",
    "title": "Class BufferChunkExt",
    "keywords": "Class BufferChunkExt Inheritance System.Object BufferChunkExt Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TM Assembly : TM.dll Syntax public static class BufferChunkExt Methods | Improve this Doc View Source Add(BufferChunk, PacketHeader) Adds the specified header. Declaration public static BufferChunk Add(this BufferChunk buf, PacketHeader header) Parameters Type Name Description BufferChunk buf The buf. PacketHeader header The header. Returns Type Description BufferChunk BufferChunk. | Improve this Doc View Source MC_PT_ILH(BufferChunk) Declaration public static MC_PT_ILH MC_PT_ILH(this BufferChunk buf) Parameters Type Name Description BufferChunk buf The buf. Returns Type Description MC_PT_ILH MC_PT_ILH. | Improve this Doc View Source NextPacketHeader(BufferChunk) Nexts the PacketHeader Declaration public static PacketHeader NextPacketHeader(this BufferChunk buf) Parameters Type Name Description BufferChunk buf The buffer chunk. Returns Type Description PacketHeader PacketHeader. | Improve this Doc View Source StateData(BufferChunk) Reads the server state data from buffer chunk. Declaration public static StateData StateData(this BufferChunk buf) Parameters Type Name Description BufferChunk buf The buffer chunk. Returns Type Description StateData System.Nullable<State2Pass>."
  },
  "api/TM/TM.Client.html": {
    "href": "api/TM/TM.Client.html",
    "title": "Class Client",
    "keywords": "Class Client Class TM.Client. Implements the System.IDisposable Inheritance System.Object Client PlanClient Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TM Assembly : TM.dll Syntax public class Client : IDisposable Fields | Improve this Doc View Source ConnectionTryCount The default value of connection try out count Declaration public static int ConnectionTryCount Field Value Type Description System.Int32 | Improve this Doc View Source ReadData The read data Declaration public BufferChunk ReadData Field Value Type Description BufferChunk | Improve this Doc View Source Sender The TCP sender Declaration public TcpClient Sender Field Value Type Description System.Net.Sockets.TcpClient Properties | Improve this Doc View Source Header Gets the packet header. Declaration public PacketHeader Header { get; } Property Value Type Description PacketHeader The header. | Improve this Doc View Source IP Declaration public string IP { get; set; } Property Value Type Description System.String | Improve this Doc View Source IpAddress Gets the server IP address. Declaration public string IpAddress { get; set; } Property Value Type Description System.String The IP address. | Improve this Doc View Source IsConnected Gets a value indicating whether this Client is connected. Declaration public bool IsConnected { get; } Property Value Type Description System.Boolean true if connected; otherwise, false . | Improve this Doc View Source LocalEndPoint Gets the local end point. Declaration public IPEndPoint LocalEndPoint { get; } Property Value Type Description System.Net.IPEndPoint The local end point. | Improve this Doc View Source LocalIpAddress Gets the local IP address. Declaration public string LocalIpAddress { get; } Property Value Type Description System.String The local IP address. | Improve this Doc View Source LocalPort Gets the local port. Declaration public int LocalPort { get; } Property Value Type Description System.Int32 The local port. | Improve this Doc View Source Port Gets the remote server port. Declaration public int Port { get; set; } Property Value Type Description System.Int32 The remote port. | Improve this Doc View Source ProcessingIsOn Gets a value indicating whether [processing is on]. Declaration public bool ProcessingIsOn { get; set; } Property Value Type Description System.Boolean true if [processing is on]; otherwise, false . | Improve this Doc View Source RemoteEndPoint Gets the remote end point. Declaration public IPEndPoint RemoteEndPoint { get; } Property Value Type Description System.Net.IPEndPoint The remote end point. | Improve this Doc View Source StateData Gets the StateData structure. Declaration public StateData StateData { get; protected set; } Property Value Type Description StateData The server. Methods | Improve this Doc View Source Connect(String, Int32) Connects the specified ip. Declaration public virtual bool Connect(string ip = null, int port = 0) Parameters Type Name Description System.String ip The ip. System.Int32 port The port. Returns Type Description System.Boolean true if XXXX, false otherwise. | Improve this Doc View Source Disconnect() Disconnects Declaration public virtual bool Disconnect() Returns Type Description System.Boolean true if disconnect is OK, false otherwise. | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source ProcessData(BufferChunk, Int32) Process received data from server Declaration public virtual void ProcessData(BufferChunk readData, int numberOfBytesRead) Parameters Type Name Description BufferChunk readData System.Int32 numberOfBytesRead | Improve this Doc View Source ProcessState(StateData) Process received state data from server Declaration public virtual void ProcessState(StateData stateData) Parameters Type Name Description StateData stateData | Improve this Doc View Source Reset() Resets this instance. Declaration public virtual void Reset() | Improve this Doc View Source Send(Byte[], EServerType) Sends the plan as byte array to server. Declaration public virtual bool Send(byte[] data, EServerType server_type = EServerType.MCS) Parameters Type Name Description System.Byte [] data The data. EServerType server_type Type of the server. Returns Type Description System.Boolean true on success, false otherwise. Exceptions Type Condition SendDataException | Improve this Doc View Source Send(UInt32, Byte[], EServerType) Sends the byte array of data to server. Declaration public virtual bool Send(uint len, byte[] data, EServerType server_type = EServerType.MCS) Parameters Type Name Description System.UInt32 len The length. System.Byte [] data The data. EServerType server_type Type of the server. Returns Type Description System.Boolean true if OK, false otherwise. Exceptions Type Condition SendDataException | Improve this Doc View Source Send(BufferChunk, EServerType) Sends the plan data as BufferChunk to server. Declaration public virtual bool Send(BufferChunk data, EServerType server_type = EServerType.MCS) Parameters Type Name Description BufferChunk data The data. EServerType server_type Type of the server. Returns Type Description System.Boolean true if OK, false otherwise. | Improve this Doc View Source Send(Packet) Sends the Packet to server. Declaration public virtual bool Send(Packet p) Parameters Type Name Description Packet p The Packet. Returns Type Description System.Boolean true on success, false otherwise. | Improve this Doc View Source SendInfo(String, EServerType) Sends the information to server. Declaration public virtual bool SendInfo(string info, EServerType server_type = EServerType.MCS) Parameters Type Name Description System.String info The information. EServerType server_type Type of the server. Returns Type Description System.Boolean true on success, false otherwise. Exceptions Type Condition SendInfoException Events | Improve this Doc View Source DataBlockReceived Occurs when [data block received]. Declaration public event ClientDataHandler DataBlockReceived Event Type Type Description ClientDataHandler | Improve this Doc View Source ErrorReceived Occurs when [on error received]. Declaration public event ClientHandler ErrorReceived Event Type Type Description ClientHandler | Improve this Doc View Source InfoReceived Occurs when [on info received]. Declaration public event ClientHandler InfoReceived Event Type Type Description ClientHandler | Improve this Doc View Source ServerConnected Occurs when [server connected]. Declaration public event ClientHandler ServerConnected Event Type Type Description ClientHandler | Improve this Doc View Source ServerDisconnected Occurs when [server disconnected]. Declaration public event ClientHandler ServerDisconnected Event Type Type Description ClientHandler | Improve this Doc View Source ServerStateChanged Occurs when [server state changed]. Declaration public event ServerStateChangedHandler ServerStateChanged Event Type Type Description ServerStateChangedHandler Implements System.IDisposable See Also System.IDisposable"
  },
  "api/TM/TM.ECommandError.html": {
    "href": "api/TM/TM.ECommandError.html",
    "title": "Enum ECommandError",
    "keywords": "Enum ECommandError ошибка, приведшая к не выполнению команды при пополнении править: GetLastErrorDescription, список расшифровок Namespace : TM Assembly : TM.dll Syntax public enum ECommandError Fields Name Description ACCNOTCONNECTED ошибка подключения ретранслятора к MainControl ACCNOTREADY не готовность ускорителя к приему плана CHECKSUMMERR ошибка контрольной суммы в присланном пакете CROPPEDDATA получено данных меньше, чем указано в заголовке пакета ECSNOTCONNECTED ошибка подключения сервера к серверу контроля пучка EXT_INERRUPT процесс прерван по внешнему запросу FILEIOERROR ошибка доступа к файловой систем INCORRECTDATA некорректные данные в плане NO_PLAN_UPLOADED план еще не загружен в интерфейс NOERROR выполнение команды успешно NOTCONNECTED ошибка подключения к ретранслятору OP_INERRUPT процесс прерван оператором MainControl OP_PAUSE процесс приостановлен оператором PFSPOSITION ошибка положения системы фиксации PLAN_EMPTY план не содержит корректных выстрелов PLANACCEPTED план успешно принят ускорителем RESTART_PROHIBITED повторный запуск плана запрещен STATENOTREADY попытка выполнить команду при неготовности сервера UNKNOWNCMD неизвестная команда|данные WAIT_D ожидание смены направления WAIT_H ожидание смены высоты WAIT_HD ожидание смены высоты и направления Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EComPortErr.html": {
    "href": "api/TM/TM.EComPortErr.html",
    "title": "Enum EComPortErr",
    "keywords": "Enum EComPortErr ошибки, выбираемые RS485_GetErrorMessage Namespace : TM Assembly : TM.dll Syntax public enum EComPortErr Fields Name Description ANQ Не совпали адреса запрашиваемого и ответившего устройства или код запроса не равен коду ответа BUSY Устройство занято CID Ошибка номера канала CMD Код команды не поддерживается CNT Ошибка значения счётчика байт записи COUNT The count CS Ошибка контрольной суммы DOR0 Data Overrun USART0 DOR0_UPE0 DOR0_UPE0 DOR1 Data Overrun USART1 DOR1_UPE1 DOR1_UPE1 DOR2 Data Overrun USART2 DOR2_UPE2 DOR2_UPE2 DOR3 DOR3 DOR3_UPE3 UPE3 EEPROM Ошибка операции с EEPROM ERR_1 The error 1 ERR_2 The error 2 FE0 Frame Error USART0 FE0_DOR0 FE0_DOR0 FE0_DOR0_UPE0 FE0_DOR0_UPE0 FE0_UPE0 FE0_UPE0 FE1 Frame Error USART1 FE1_DOR1 FE1_DOR1 FE1_DOR1_UPE1 FE1_DOR1_UPE1 FE1_UPE1 FE1_UPE1 FE2 Frame Error USART2 FE3 FE3 FE3_DOR3 DOR3 FE3_DOR3_UPE3 FE3_DOR3_UPE3 FE3_UPE3 UPE3 NOT Нет ошибок OVF_R0 Переполнение буфера приёма USART0 OVF_R1 Переполнение буфера приёма USART1 OVF_R2 Переполнение буфера приёма USART2\" OVF_R3 Переполнение буфера приёма USART3 OVF_T0 Переполнение буфера приёма USART0 OVF_T1 Переполнение буфера приёма USART1 OVF_T2 Переполнение буфера приёма USART2 OVF_T3 Переполнение буфера приёма USART3 PID Ошибка номера параметра PRM Ошибка количества параметров TO Ошибка времени ожидания TO_R1 Истекло время ожидания в канале приёма USART1 TO_R2 Истекло время ожидания в канале приёма USART2 TO_R3 Истекло время ожидания в канале приёма USART3 TO_RO Истекло время ожидания в канале приёма USART0 UPE0 UART Parity Error USART0 UPE1 UART Parity Error USART1 UPE2 UART Parity Error USART2 UPE3 UART Parity Error USART3 VAL Ошибка значения параметра Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EConfigTag.html": {
    "href": "api/TM/TM.EConfigTag.html",
    "title": "Enum EConfigTag",
    "keywords": "Enum EConfigTag теги пакета конфигурации устройства Namespace : TM Assembly : TM.dll Syntax public enum EConfigTag Fields Name Description CONNECT коннект, ParceCfgPacket_GetLinkData DEVCONFIG байт конфигурации устройства, зависит от устройства DEVICE подключенное железо: RTLINK линк ретранслятора (для NetRT -> TmNetScan) TXTINFO текстовая информация в свободном виде VER версия пакета, строка PACKET_VERTION_STR Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EConnectType.html": {
    "href": "api/TM/TM.EConnectType.html",
    "title": "Enum EConnectType",
    "keywords": "Enum EConnectType способы подключения сервера к источнику данных используется в ParseTagAsString, ParseConnectType, _DataServer_Info2Tree, ConnectToServer, DisconnectFromServer, IsConnected Namespace : TM Assembly : TM.dll Syntax public enum EConnectType Fields Name Description DIRECT прямое подключение к COM порту (реализовано для кресла, для температурного сервера, для ретген-сервера) c оберткой для RS485 \\\"+\\\"/\\\":\\\"\")] IMITATION имитация подключения к устройству - всегда успешное. Для программ-имитаторов LNKLIB библиотека linklib.h by P.Lunev (ретранслятор на кресло, температурные мастера, рентген-сервер(железо)...) NONE заглушка RS232 прямое подключение к ком-порту (COM порт реализовано Autonics) TCPCUSTOM простое TCP - подключение к устройству. Разбор полностью реализуется по месту использования TMPROTOCOL протокол TM_Protocol ( расширение TCP - температурный сервер-клиент, рентген-сервер-томограф, прокси кресла ) Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EControlType.html": {
    "href": "api/TM/TM.EControlType.html",
    "title": "Enum EControlType",
    "keywords": "Enum EControlType Enum EControlType Namespace : TM Assembly : TM.dll Syntax public enum EControlType Fields Name Description ADC канал АЦП ALTITUDE высота полъема ANGLE угол поворота кресла, градусы ANGLE_IENC угол поворота - значение энкодера ANGLE_PIC угол поворота кресла, изображение ATTENTION картинка с восклицательным знаком как и блокировка состояний DAC канал ЦАП DETECTOR положение детектора DOOR картинка \\\"дверь\\\" FARADAY_LOCAL картинка прямоугольная лампочка - локальный режим управления цилиндром фарадея FARADAY_POS положение цилиндра фарадея - круглая кнопка, цветом отображает активное положение FARADAY_STATUS картинка прямоугольная лампочка - статус устройства HOST картинка - компьютер, цветом отображает успушное или нет подключение IRRADIATION картинка с символом радиации - не используется пока MESSAGE_LIST блок для вывода сообщений. Не входит в сервера данных, относится к общему интерфейсу App VisualControl MODE_TXT текущий режим сервера ECS - ECS_MODE_READY MOVING кресло в движении (круглая желтая лампочка) PFS_DETECTORLR PFS_HAND кресло - ручное управление PFS_HORMOVE кресло - горизонтальное перемещение, мм PFS_MODE кресло - текущий режим терапии - текстовая подпись PFS_STATUS картинка прямоугольная лампочка - статус устройства STATUS картинка круглая лампочка - статус сервера TEMPSET набор датчиков (температурных) TEMPSINGLE один датчик из набора TEMPSTATUS картинка блокировок/состояний TEXTLABEL текстовая подпись UNKNOWN \"Неопределённый тип UPDATE_NUM номер апдейта дата-сервера (доступно для всех типов) WATERFLOW проток воды XR_HEAT рентген - накал XR_HV рентген - высокое XR_IHV рентген - ток в трубке XR_IVAC рентген - ток насоса XR_SHOTMODE текущий режим сервера XRay - номер набора настроек XR_UHV рентген - напряжение в трубке XRAY включено излучение XRAYMODE текущий режим сервера XRay Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EDataCommand.html": {
    "href": "api/TM/TM.EDataCommand.html",
    "title": "Enum EDataCommand",
    "keywords": "Enum EDataCommand подтипы данных CMD в пакете пересылки клиент->сервер и сервер->клиент Namespace : TM Assembly : TM.dll Syntax public enum EDataCommand Fields Name Description SHOTSBLOCK блок выстрелов (часть плана) клиент->сервер SHOTSRESULTS результат выполнения серии выстрелов клиент-сервер STATE текущее состояние сервера клиент-сервер Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EDevErrorStatus.html": {
    "href": "api/TM/TM.EDevErrorStatus.html",
    "title": "Enum EDevErrorStatus",
    "keywords": "Enum EDevErrorStatus статус аппаратной ошибки, сгенеренной устройством Namespace : TM Assembly : TM.dll Syntax public enum EDevErrorStatus Fields Name Description INFORMATION несерьезная ошибка PROBLEM aппаратная проблема WARNING предупреждение Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EDeviceStatus.html": {
    "href": "api/TM/TM.EDeviceStatus.html",
    "title": "Enum EDeviceStatus",
    "keywords": "Enum EDeviceStatus состояние устройства Namespace : TM Assembly : TM.dll Syntax public enum EDeviceStatus Fields Name Description ATTENTION предупреждение CRACKED неисправно HOT активно IN_WORK в работе, но не блокирующей устройство, например для цилиндра фарадея MOVING в движении - перемещение кресла, детектора и т.д. OFF выключено или неотконфигурировано OK работает OPEN для двери Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EDeviceType.html": {
    "href": "api/TM/TM.EDeviceType.html",
    "title": "Enum EDeviceType",
    "keywords": "Enum EDeviceType типы устройств-микроконтроллеров для структуры DevDescr Namespace : TM Assembly : TM.dll Syntax public enum EDeviceType Fields Name Description ANCSXY контроллер перемещателя AUTONICS ASH_ST универсальный контроллер на атмега для SERVER_TYPE_ASH DIMS вакуум, высокое, сетка. накал FDCY контроллер цилиндра фарадея MBPS блок линз, например MVCAM видеокамера MV PFS контроллер кресла TERMO_M термо, мастер-контроллер 8 слэйвов TERMO_S термо, слэйв-контроллер 8 датчиков UNKNOWN Неопределённый тип XRAYC блок электроники для старой модели рентгеновского сервера (до 2016 года в терапии) Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EPacketSettings.html": {
    "href": "api/TM/TM.EPacketSettings.html",
    "title": "Enum EPacketSettings",
    "keywords": "Enum EPacketSettings битовое поле TCPSrvServer::TMSettings или TCPSrvServer::TMSettings, настройки протокола взаимодействия Namespace : TM Assembly : TM.dll Syntax public enum EPacketSettings Fields Name Description AddCheckSumm добавлять контрольную сумму в пакетак к клиенту CheckPacketSize проверять входящий размер пакета (значение поля PacketSizeLimit) ExpectCheckSumm ожидать и проверять контрольную сумму в пакетах от клиента NULL никаких доп. настроек Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EPacketType.html": {
    "href": "api/TM/TM.EPacketType.html",
    "title": "Enum EPacketType",
    "keywords": "Enum EPacketType Enum EPacketType Namespace : TM Assembly : TM.dll Syntax public enum EPacketType Fields Name Description Command The command Data The data Error The error Info The information Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EPlanState.html": {
    "href": "api/TM/TM.EPlanState.html",
    "title": "Enum EPlanState",
    "keywords": "Enum EPlanState состояния сервера в процессе исполнения плана Namespace : TM Assembly : TM.dll Syntax public enum EPlanState Fields Name Description FINISHED процесс исполнения плана завершен INPROCESS процесс исполнения плана NOTREADY не готов PAUSED процесс исполнения плана приостановлен READY готовность UNKNOWN не определенный Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EProcessState.html": {
    "href": "api/TM/TM.EProcessState.html",
    "title": "Enum EProcessState",
    "keywords": "Enum EProcessState динамическое состояние сервера Namespace : TM Assembly : TM.dll Syntax public enum EProcessState Fields Name Description BREAK сеанс лечения прерван BREAK_PFS_ERR сеанс лечения временно приостановлен. \"Кресло\" не встало в требуемую позицию FILEACCEPTED получен файл FINISHED сеанс лечения закончен INPROCESS сеанс лечения в процессе NOTREADY сеанс лечения не готов PAUSED_EXT сеанс лечения временно приостановлен по внешнему запросу PAUSED_OPT сеанс лечения временно приостановлен по команде оператора ускорителя READY сеанс лечения готов UNKNOWN не определён WAIT_D сеанс лечения временно приостановлен. Требуется верификация перед сменой направления. WAIT_H сеанс лечения временно приостановлен. Требуется верификация перед сменой высоты WAIT_HD сеанс лечения временно приостановлен. Требуется верификация перед сменой высоты и ракурса Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EServerConnectSignature.html": {
    "href": "api/TM/TM.EServerConnectSignature.html",
    "title": "Enum EServerConnectSignature",
    "keywords": "Enum EServerConnectSignature Enum EServerConnectSignature Namespace : TM Assembly : TM.dll Syntax public enum EServerConnectSignature Fields Name Description DIRECT прямое подключение к COM порту c оберткой для 485 IMITATION имитация подключения LNKLIB линклиб RS232 прямое подключение к COM порту TCPCUSTOM простое TCP TMPROTOCOL протокол TM_Protocol Extension Methods Extensions.Description()"
  },
  "api/TM/TM.EServerType.html": {
    "href": "api/TM/TM.EServerType.html",
    "title": "Enum EServerType",
    "keywords": "Enum EServerType Enum EServerType Namespace : TM Assembly : TM.dll Syntax public enum EServerType Fields Name Description ACC ускоряющий сервер - TM протокол не использует, пассивный ASH устройство на AT-Mega, пассивный DIRECT, пассивный Linklib AUTONICS перемещатель Autonics пассивный RS232, активный TM CAMSRV камеры (П.Лунев) активный Linklib DACADC сервер ЦАП/АЦП- TM протокол не использует, пассивный ECS контроль выпуска - камера+фарадей пассивный CUSTOM, активный TM GT глобал-тест, пассивный TM MCS MainControl-упр.ускорителем как сервер, активный TM NETRT ретранслятор (конфигурация), пассивный TM NETSCAN для сканера - только от клиента к неизвестному серверу, TM PFS сервер системы фиксации пациента - TM протокол не использует пассивный PFS_PROXY кресло-контроль - прокси-сервер системы фиксации пациента, активный TEMPERATURE температурный сервер активный TM, пассивный Linklib TERMLITE упрощенный температурный сервер (один слэйв, пассивный DIRECT. пассивный Linklib TMC сервер - программы управления томографом TMC, активный TM UNKNOWN неизвестный тип. Только для пинг-запросов XRAY рентгеновский сервер активный TM, пассивный Linklib Extension Methods Extensions.Description() PacketSignature.Signature()"
  },
  "api/TM/TM.ESpotResult.html": {
    "href": "api/TM/TM.ESpotResult.html",
    "title": "Enum ESpotResult",
    "keywords": "Enum ESpotResult результат выполнения выстрела Namespace : TM Assembly : TM.dll Syntax public enum ESpotResult Fields Name Description DONE выстрел произведен успешно INCORRECT выстрел признан некорректным, отсеян NONE выстрел еще не производился PARTIALLY выстрел произведен частично PASSED отправлен на отстрел, результата еще нет TIMEOUT результат не получен системой контроля выпуска Extension Methods Extensions.Description()"
  },
  "api/TM/TM.Extensions.html": {
    "href": "api/TM/TM.Extensions.html",
    "title": "Class Extensions",
    "keywords": "Class Extensions Class Extensions Inheritance System.Object Extensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TM Assembly : TM.dll Syntax public static class Extensions Methods | Improve this Doc View Source ByteArrayToStructure(Byte[], Object, Int32) Bytes the array to structure. Declaration public static object ByteArrayToStructure(this byte[] bytearray, object structureObj, int position) Parameters Type Name Description System.Byte [] bytearray The bytearray. System.Object structureObj The structure object. System.Int32 position The position. Returns Type Description System.Object System.Object. | Improve this Doc View Source Copy(Double[]) Copies the specified hist. Declaration public static double[] Copy(this double[] hist) Parameters Type Name Description System.Double [] hist The hist. Returns Type Description System.Double [] System.Double[][]. | Improve this Doc View Source Copy(Stream, Stream, Action<Stream, Stream, Exception>) This is not suitable for large files because the SEND() buffer may get filled up and throw an exception if you attempt to write to it. You should change this to use the strongly typed network stream and ensure you have enough room to send data Declaration public static void Copy(this Stream source, Stream destination, Action<Stream, Stream, Exception> completed = null) Parameters Type Name Description System.IO.Stream source The source. System.IO.Stream destination The destination. System.Action < System.IO.Stream , System.IO.Stream , System.Exception > completed The completed. | Improve this Doc View Source Description(Enum) Descriptions the specified value. Declaration public static string Description(this Enum value) Parameters Type Name Description System.Enum value The value. Returns Type Description System.String System.String. | Improve this Doc View Source SplitString(String, Int32) Splits the string. Declaration public static IEnumerable<string> SplitString(this string s, int length) Parameters Type Name Description System.String s The s. System.Int32 length The length. Returns Type Description System.Collections.Generic.IEnumerable < System.String > IEnumerable<System.String>. | Improve this Doc View Source ToBool(String, Boolean) To the bool. Declaration public static bool ToBool(this string str, bool def) Parameters Type Name Description System.String str The string. System.Boolean def if set to true [def]. Returns Type Description System.Boolean true if XXXX, false otherwise | Improve this Doc View Source ToByte(Int16[]) Converts the 16bit to to 8bit array. Declaration public static byte[] ToByte(this short[] arr) Parameters Type Name Description System.Int16 [] arr The arr. Returns Type Description System.Byte [] System.Byte[][]. | Improve this Doc View Source ToDegrees(Single) Converts to degrees. Declaration public static float ToDegrees(this float radians) Parameters Type Name Description System.Single radians The radians. Returns Type Description System.Single System.Single. | Improve this Doc View Source ToDouble(String, Double) To the double. Declaration public static double ToDouble(this string str, double def) Parameters Type Name Description System.String str The string. System.Double def The def. Returns Type Description System.Double System.Double. | Improve this Doc View Source ToFloat(String, Single) To the float. Declaration public static float ToFloat(this string str, float def) Parameters Type Name Description System.String str The string. System.Single def The def. Returns Type Description System.Single System.Single. | Improve this Doc View Source ToInt(String, Int32) To the int. Declaration public static int ToInt(this string str, int def) Parameters Type Name Description System.String str The string. System.Int32 def The def. Returns Type Description System.Int32 System.Int32. | Improve this Doc View Source WriteMultiLine(String, Int32) Writes the multi line. Declaration public static void WriteMultiLine(this string lstring, int len = 110) Parameters Type Name Description System.String lstring The lstring. System.Int32 len The length."
  },
  "api/TM/TM.Globals.html": {
    "href": "api/TM/TM.Globals.html",
    "title": "Class Globals",
    "keywords": "Class Globals Class Globals == Default values and global objects Inheritance System.Object Globals Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TM Assembly : TM.dll Syntax public static class Globals Fields | Improve this Doc View Source IP The default IP Declaration public static string IP Field Value Type Description System.String | Improve this Doc View Source Port The default port Declaration public static int Port Field Value Type Description System.Int32 Properties | Improve this Doc View Source Debug Set Debugging ON/OFF Declaration public static bool Debug { get; set; } Property Value Type Description System.Boolean true if debug; otherwise, false . | Improve this Doc View Source DebugPreference Enum.ActionPreference: Continue 2 - Debug is ON SilentlyContinue 0 - Debug is OFF Declaration public static int DebugPreference { get; set; } Property Value Type Description System.Int32 The debug preference. | Improve this Doc View Source Language Declaration public static string Language { get; set; } Property Value Type Description System.String"
  },
  "api/TM/TM.html": {
    "href": "api/TM/TM.html",
    "title": "Namespace TM",
    "keywords": "Namespace TM Classes BufferChunk Overview: ---------------------------------------------------------------- BufferChunk is a helper class created to make network calls in DotNet easier by allowing byte[] to be passed around along with an index (or offset) and length (or chunksize). Members: ---------------------------------------------------------------- - index - offset inside the buffer where valid data starts - length - amount of valid data - buffer - byte[] containing the data Except for constructors (which set index and length member variables), when index and length are passed as parameters, they are used as offsets into the valid data, not offsets into the buffer. Object State: ---------------------------------------------------------------- BufferChunk does not accept or return null or zero-length objects. However, it is valid for a BufferChunk to be in a state where it has no data to manipulate i.e. length == 0 this.index + this.length cannot be > buffer.Length index + length cannot be > this.length when manipulating inside the valid data index must be >= 0 length must be >= 0 Integral types: -------------------------------------------------------------- BufferChunk allows the reading and writing of integral types (Int16, Int32, Int64 and the unsigned counterparts) into the byte[]. Implements the System.IDisposable Implements the System.ICloneable BufferChunkExt Client Class TM.Client. Implements the System.IDisposable Extensions Class Extensions Globals Class Globals == Default values and global objects InsufficientDataException Class InsufficientDataException Raised when requesting more data than current buffer holds Implements the System.ApplicationException InsufficientSpaceException Class InsufficientSpaceException Raised when trying to add more data than current buffer can hold Implements the System.ApplicationException NoDataException Class NoDataException Raised when requesting more data than current buffer holds Implements the System.ApplicationException Packet Implements the exchange packet System.IDisposable PacketSignature Class PacketSignature. SendCommandException Exception during sending command to server Implements the System.Exception SendDataException Exception during sending DATA to server Implements the System.Exception SendInfoException Exception during sending info to server Implements the System.Exception Structs PacketHeader Struct PacketHeader Enums ECommandError ошибка, приведшая к не выполнению команды при пополнении править: GetLastErrorDescription, список расшифровок EComPortErr ошибки, выбираемые RS485_GetErrorMessage EConfigTag теги пакета конфигурации устройства EConnectType способы подключения сервера к источнику данных используется в ParseTagAsString, ParseConnectType, _DataServer_Info2Tree, ConnectToServer, DisconnectFromServer, IsConnected EControlType Enum EControlType EDataCommand подтипы данных CMD в пакете пересылки клиент->сервер и сервер->клиент EDevErrorStatus статус аппаратной ошибки, сгенеренной устройством EDeviceStatus состояние устройства EDeviceType типы устройств-микроконтроллеров для структуры DevDescr EPacketSettings битовое поле TCPSrvServer::TMSettings или TCPSrvServer::TMSettings, настройки протокола взаимодействия EPacketType Enum EPacketType EPlanState состояния сервера в процессе исполнения плана EProcessState динамическое состояние сервера EServerConnectSignature Enum EServerConnectSignature EServerType Enum EServerType ESpotResult результат выполнения выстрела"
  },
  "api/TM/TM.InsufficientDataException.html": {
    "href": "api/TM/TM.InsufficientDataException.html",
    "title": "Class InsufficientDataException",
    "keywords": "Class InsufficientDataException Class InsufficientDataException Raised when requesting more data than current buffer holds Implements the System.ApplicationException Inheritance System.Object System.Exception System.ApplicationException InsufficientDataException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TM Assembly : TM.dll Syntax public class InsufficientDataException : ApplicationException, ISerializable Constructors | Improve this Doc View Source InsufficientDataException() Initializes a new instance of the InsufficientDataException class. Declaration public InsufficientDataException() | Improve this Doc View Source InsufficientDataException(String) Initializes a new instance of the InsufficientDataException class. Declaration public InsufficientDataException(string msg) Parameters Type Name Description System.String msg The MSG. | Improve this Doc View Source InsufficientDataException(String, Exception) Initializes a new instance of the InsufficientDataException class. Declaration public InsufficientDataException(string msg, Exception inner) Parameters Type Name Description System.String msg The MSG. System.Exception inner The inner. Implements System.Runtime.Serialization.ISerializable See Also System.ApplicationException"
  },
  "api/TM/TM.InsufficientSpaceException.html": {
    "href": "api/TM/TM.InsufficientSpaceException.html",
    "title": "Class InsufficientSpaceException",
    "keywords": "Class InsufficientSpaceException Class InsufficientSpaceException Raised when trying to add more data than current buffer can hold Implements the System.ApplicationException Inheritance System.Object System.Exception System.ApplicationException InsufficientSpaceException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TM Assembly : TM.dll Syntax public class InsufficientSpaceException : ApplicationException, ISerializable Constructors | Improve this Doc View Source InsufficientSpaceException() Initializes a new instance of the InsufficientSpaceException class. Declaration public InsufficientSpaceException() | Improve this Doc View Source InsufficientSpaceException(String) Initializes a new instance of the InsufficientSpaceException class. Declaration public InsufficientSpaceException(string msg) Parameters Type Name Description System.String msg The MSG. | Improve this Doc View Source InsufficientSpaceException(String, Exception) Initializes a new instance of the InsufficientSpaceException class. Declaration public InsufficientSpaceException(string msg, Exception inner) Parameters Type Name Description System.String msg The MSG. System.Exception inner The inner. Implements System.Runtime.Serialization.ISerializable See Also System.ApplicationException"
  },
  "api/TM/TM.NoDataException.html": {
    "href": "api/TM/TM.NoDataException.html",
    "title": "Class NoDataException",
    "keywords": "Class NoDataException Class NoDataException Raised when requesting more data than current buffer holds Implements the System.ApplicationException Inheritance System.Object System.Exception System.ApplicationException NoDataException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TM Assembly : TM.dll Syntax public class NoDataException : ApplicationException, ISerializable Constructors | Improve this Doc View Source NoDataException() Initializes a new instance of the NoDataException class. Declaration public NoDataException() | Improve this Doc View Source NoDataException(String) Initializes a new instance of the NoDataException class. Declaration public NoDataException(string msg) Parameters Type Name Description System.String msg The MSG. | Improve this Doc View Source NoDataException(String, Exception) Initializes a new instance of the NoDataException class. Declaration public NoDataException(string msg, Exception inner) Parameters Type Name Description System.String msg The MSG. System.Exception inner The inner. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/TM/TM.Packet.html": {
    "href": "api/TM/TM.Packet.html",
    "title": "Class Packet",
    "keywords": "Class Packet Implements the exchange packet System.IDisposable Inheritance System.Object Packet Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TM Assembly : TM.dll Syntax public class Packet : IDisposable Constructors | Improve this Doc View Source Packet(EServerType, EPacketType, Byte) Initializes a new instance of the Packet class. Declaration public Packet(EServerType server_type, EPacketType type, byte cmd) Parameters Type Name Description EServerType server_type EPacketType type System.Byte cmd | Improve this Doc View Source Packet(EServerType, EPacketType, Byte, Byte, Byte[]) Initializes a new instance of the Packet class. Declaration public Packet(EServerType server_type, EPacketType type, byte cmd, byte value = 0, byte[] data = null) Parameters Type Name Description EServerType server_type EPacketType type System.Byte cmd System.Byte value System.Byte [] data | Improve this Doc View Source Packet(EServerType, EPacketType, Byte, UInt32, Byte[]) Initializes a new instance of the Packet class. Declaration public Packet(EServerType server_type, EPacketType type, byte value, uint length, byte[] data) Parameters Type Name Description EServerType server_type EPacketType type System.Byte value System.UInt32 length System.Byte [] data | Improve this Doc View Source Packet(EServerType, EPacketType, String) Initializes a new instance of the Packet class. Declaration public Packet(EServerType server_type, EPacketType type, string data) Parameters Type Name Description EServerType server_type EPacketType type System.String data Fields | Improve this Doc View Source Header The packet header Declaration public PacketHeader Header Field Value Type Description PacketHeader Properties | Improve this Doc View Source Data The array byte of TotalSize Declaration public BufferChunk Data { get; } Property Value Type Description BufferChunk | Improve this Doc View Source PacketNumber The absolute counter of packets Declaration public static int PacketNumber { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ServerType Gets the type of the server. Declaration public EServerType ServerType { get; } Property Value Type Description EServerType | Improve this Doc View Source TotalSize The Total Size = sizeof(header) + sizeof(Data) + checksum Declaration public int TotalSize { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source IsChecksumOK(Byte[]) Checks the checksum. Declaration public bool IsChecksumOK(byte[] pdata) Parameters Type Name Description System.Byte [] pdata The pdata. Returns Type Description System.Boolean true if OK, false otherwise. | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements System.IDisposable See Also System.IDisposable"
  },
  "api/TM/TM.PacketHeader.html": {
    "href": "api/TM/TM.PacketHeader.html",
    "title": "Struct PacketHeader",
    "keywords": "Struct PacketHeader Struct PacketHeader Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TM Assembly : TM.dll Syntax public struct PacketHeader Constructors | Improve this Doc View Source PacketHeader(EServerType) Initializes a new instance of the PacketHeader struct. Declaration public PacketHeader(EServerType server_type = EServerType.MCS) Parameters Type Name Description EServerType server_type Fields | Improve this Doc View Source datalength length of data after this header (bytes) Declaration public uint datalength Field Value Type Description System.UInt32 | Improve this Doc View Source Length The length Declaration public static uint Length Field Value Type Description System.UInt32 | Improve this Doc View Source packet_number The packet number Declaration public int packet_number Field Value Type Description System.Int32 | Improve this Doc View Source reserved The reserved Declaration public byte[] reserved Field Value Type Description System.Byte [] | Improve this Doc View Source sign signature: \"XRay\" | \"Ther\" | . Declaration public byte[] sign Field Value Type Description System.Byte [] | Improve this Doc View Source type type: command, data, info Declaration public byte type Field Value Type Description System.Byte | Improve this Doc View Source value command number Declaration public byte value Field Value Type Description System.Byte Methods | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/TM/TM.PacketSignature.html": {
    "href": "api/TM/TM.PacketSignature.html",
    "title": "Class PacketSignature",
    "keywords": "Class PacketSignature Class PacketSignature. Inheritance System.Object PacketSignature Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TM Assembly : TM.dll Syntax public static class PacketSignature Properties | Improve this Doc View Source _ACC Gets the acc. Declaration public static byte[] _ACC { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source _ASH у-во на AT-Mega. Не является маркером, просто для идентификации в DataServers_Info2Tree и конфигах Declaration public static byte[] _ASH { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source _PFS кресло. Не является маркером, просто для идентификации в DataServers_Info2Tree. Declaration public static byte[] _PFS { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source _TML упрощенный температурный сервер (один слэйв). Не является маркером, просто для идентификации в DataServers_Info2Tree и конфигах Declaration public static byte[] _TML { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source ADDA Gets the adda. Declaration public static byte[] ADDA { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source ANCS перемещатель Autonics Declaration public static byte[] ANCS { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source CAMS сервер видеокамер. Не является маркером, просто для идентификации в конфигах Declaration public static byte[] CAMS { get; } Property Value Type Description System.Byte [] The CAMS. | Improve this Doc View Source ECSv контроль выпуска (результаты выполнения) TM Declaration public static byte[] ECSv { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source MCSv MainControl Interface Software - транслятор к программе упр.ускорителем как сервер TM Declaration public static byte[] MCSv { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source MCTL MainControl Software - программа упр.ускорителем как сервер (результаты выполнения, Израиль, не TM) Declaration public static byte[] MCTL { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source TM_C клиент томографа как сервер Declaration public static byte[] TM_C { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source TMCP кресло-контроль - прокси-сервер Declaration public static byte[] TMCP { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source TMGT глобал-тест Declaration public static byte[] TMGT { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source TMNS для сканера - только от клиента к неизвестному серверу TM Declaration public static byte[] TMNS { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source TMPR сервер термоконтроля. Declaration public static byte[] TMPR { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source TMRT ретранслятор (конфигурация) Declaration public static byte[] TMRT { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source UNKNOWN Gets the unknown. Declaration public static byte[] UNKNOWN { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source XRay сервер рентгена Declaration public static byte[] XRay { get; } Property Value Type Description System.Byte [] Methods | Improve this Doc View Source ServerType(Byte[]) Servers the type. Declaration public static EServerType ServerType(this byte[] mark) Parameters Type Name Description System.Byte [] mark The mark. Returns Type Description EServerType EServerType. | Improve this Doc View Source ServerType(String) Servers the type. Declaration public static EServerType ServerType(this string str) Parameters Type Name Description System.String str The string. Returns Type Description EServerType EServerType. | Improve this Doc View Source Signature(EServerType) Signatures the specified type. Declaration public static byte[] Signature(this EServerType type) Parameters Type Name Description EServerType type The type. Returns Type Description System.Byte [] System.Byte[]."
  },
  "api/TM/TM.SendCommandException.html": {
    "href": "api/TM/TM.SendCommandException.html",
    "title": "Class SendCommandException",
    "keywords": "Class SendCommandException Exception during sending command to server Implements the System.Exception Inheritance System.Object System.Exception SendCommandException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TM Assembly : TM.dll Syntax public class SendCommandException : Exception, ISerializable Constructors | Improve this Doc View Source SendCommandException(String) Initializes a new instance of the SendCommandException class. Declaration public SendCommandException(string msg) Parameters Type Name Description System.String msg The MSG. Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/TM/TM.SendDataException.html": {
    "href": "api/TM/TM.SendDataException.html",
    "title": "Class SendDataException",
    "keywords": "Class SendDataException Exception during sending DATA to server Implements the System.Exception Inheritance System.Object System.Exception SendDataException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TM Assembly : TM.dll Syntax public class SendDataException : Exception, ISerializable Constructors | Improve this Doc View Source SendDataException(String) Initializes a new instance of the SendDataException class. Declaration public SendDataException(string msg) Parameters Type Name Description System.String msg The MSG. Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/TM/TM.SendInfoException.html": {
    "href": "api/TM/TM.SendInfoException.html",
    "title": "Class SendInfoException",
    "keywords": "Class SendInfoException Exception during sending info to server Implements the System.Exception Inheritance System.Object System.Exception SendInfoException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TM Assembly : TM.dll Syntax public class SendInfoException : Exception, ISerializable Constructors | Improve this Doc View Source SendInfoException(String) Initializes a new instance of the SendInfoException class. Declaration public SendInfoException(string msg) Parameters Type Name Description System.String msg The MSG. Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/TM/TMCmdLet.ClearPlanCmdlet.html": {
    "href": "api/TM/TMCmdLet.ClearPlanCmdlet.html",
    "title": "Class ClearPlanCmdlet",
    "keywords": "Class ClearPlanCmdlet Clears plan on the server. Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet ClearPlanCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Clear\", \"Plan\")] [OutputType(new Type[]{typeof(bool)})] public class ClearPlanCmdlet : PlanCmdlet Methods | Improve this Doc View Source ProcessRecord() ProcessRecord Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() See Also PlanCmdlet"
  },
  "api/TM/TMCmdLet.ConnectServerCmdlet.html": {
    "href": "api/TM/TMCmdLet.ConnectServerCmdlet.html",
    "title": "Class ConnectServerCmdlet",
    "keywords": "Class ConnectServerCmdlet Connects to remote server. Returns Client object. Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet ConnectServerCmdlet Inherited Members System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Connect\", \"Server\")] [OutputType(new Type[]{typeof(Client)})] public class ConnectServerCmdlet : PSCmdlet Properties | Improve this Doc View Source IpAddress Gets or sets the destination hostname or IP address. Declaration [Parameter(Position = 0, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [ValidateNotNullOrEmpty] [Alias(new string[]{\"ComputerName\", \"IP\", \"Host\"})] public string IpAddress { get; set; } Property Value Type Description System.String The IP address. | Improve this Doc View Source Port Gets or sets whether to perform a TCP port. Declaration [ValidateRange(0, 65535)] [Parameter(Position = 1, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"TcpPort\"})] public int Port { get; set; } Property Value Type Description System.Int32 The port. Methods | Improve this Doc View Source ProcessRecord() Process record implementation. Declaration protected override void ProcessRecord() Overrides System.Management.Automation.Cmdlet.ProcessRecord() | Improve this Doc View Source StopProcessing() On Control-C = interrupt operation and disconnect Declaration protected override void StopProcessing() Overrides System.Management.Automation.Cmdlet.StopProcessing() See Also System.Management.Automation.PSCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.DisconnectServerCmdlet.html": {
    "href": "api/TM/TMCmdLet.DisconnectServerCmdlet.html",
    "title": "Class DisconnectServerCmdlet",
    "keywords": "Class DisconnectServerCmdlet Disconnects from remote server. Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet DisconnectServerCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Disconnect\", \"Server\")] [OutputType(new Type[]{typeof(bool)})] public class DisconnectServerCmdlet : PlanCmdlet Methods | Improve this Doc View Source ProcessRecord() ProcessRecord Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() See Also PlanCmdlet"
  },
  "api/TM/TMCmdLet.GetPlanCmdlet.html": {
    "href": "api/TM/TMCmdLet.GetPlanCmdlet.html",
    "title": "Class GetPlanCmdlet",
    "keywords": "Class GetPlanCmdlet Read plan data from file specified by -Path Returns plan data as list of Spot objects. For example: $plan = Get-Plan -Path test_plan.txt Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet GetPlanCmdlet Inherited Members System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Get\", \"Plan\")] [OutputType(new Type[]{typeof(Spot)})] public class GetPlanCmdlet : PSCmdlet Properties | Improve this Doc View Source Path Gets or sets the plan file. Declaration [Parameter(Position = 0, Mandatory = true, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"file\", \"f\"})] [ValidateNotNullOrEmpty] public string Path { get; set; } Property Value Type Description System.String The path to plan file. Methods | Improve this Doc View Source ProcessRecord() Processes the record. Declaration protected override void ProcessRecord() Overrides System.Management.Automation.Cmdlet.ProcessRecord() See Also System.Management.Automation.PSCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.GetPlanResultsCmdlet.html": {
    "href": "api/TM/TMCmdLet.GetPlanResultsCmdlet.html",
    "title": "Class GetPlanResultsCmdlet",
    "keywords": "Class GetPlanResultsCmdlet Returns result of plan processing as a list of SpotFull objects Implements the PlanCmdlet Implements the System.Management.Automation.PSCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet GetPlanResultsCmdlet Inherited Members System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Get\", \"Results\")] [OutputType(new Type[]{typeof(SpotFull)})] public class GetPlanResultsCmdlet : PSCmdlet Methods | Improve this Doc View Source ProcessRecord() ProcessRecord Declaration protected override void ProcessRecord() Overrides System.Management.Automation.Cmdlet.ProcessRecord() See Also System.Management.Automation.PSCmdlet PlanCmdlet"
  },
  "api/TM/TMCmdLet.GetServerStateCmdlet.html": {
    "href": "api/TM/TMCmdLet.GetServerStateCmdlet.html",
    "title": "Class GetServerStateCmdlet",
    "keywords": "Class GetServerStateCmdlet Returns Server State. Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet GetServerStateCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Get\", \"ServerState\")] [OutputType(new Type[]{typeof(EPlanState)})] public class GetServerStateCmdlet : PlanCmdlet Properties | Improve this Doc View Source WaitTime To get server state - request is sent This is the time to wait for server response Declaration [ValidateRange(0, 65535)] [Parameter(Position = 0, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"wait\"})] public int WaitTime { get; set; } Property Value Type Description System.Int32 wait time. Methods | Improve this Doc View Source ProcessRecord() ProcessRecord implementation for GetServerStateCommand. Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() See Also PlanCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.html": {
    "href": "api/TM/TMCmdLet.html",
    "title": "Namespace TMCmdLet",
    "keywords": "Namespace TMCmdLet Classes ClearPlanCmdlet Clears plan on the server. Implements the PlanCmdlet ConnectServerCmdlet Connects to remote server. Returns Client object. Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet DisconnectServerCmdlet Disconnects from remote server. Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet GetPlanCmdlet Read plan data from file specified by -Path Returns plan data as list of Spot objects. For example: $plan = Get-Plan -Path test_plan.txt Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet GetPlanResultsCmdlet Returns result of plan processing as a list of SpotFull objects Implements the PlanCmdlet Implements the System.Management.Automation.PSCmdlet GetServerStateCmdlet Returns Server State. Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet InvokePlanCmdlet 1. reads plan data from file 2. sends plan to server 3. sends command to start plan processing 4. waits for processing finished Use Control-C - to stop plan processing To resume processing - use Start-Plan -resume PlanCmdlet Base class of PlanCommands Implements the System.Management.Automation.PSCmdlet SendCommandCmdlet Send EPlanCommand to server. public enum EPlanCommand { [Description(\"запрос на статус сервера\")] GETSTATE = 1, [Description(\"запрос на очистку плана \")] CLEARPLAN = 2, [Description(\"запрос на старт плана \")] STARTPLAN = 3, [Description(\"запрос на паузу\")] PAUSEPLAN = 4, [Description(\"запрос на останов\")] STOPPLAN = 5 } Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet SendDataCmdlet Class used to send bulk of raw data (byte[]) to server Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet Implements the PlanCmdlet SendInfoCmdlet Send \"info\" message to server Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet Implements the PlanCmdlet SendPlanCmdlet Sends plan data to remote server. Returns Client object (the same object as in Connect-Server) $client = Get-Plan test_plan.txt | Send-Plan or $plan = Get-Plan test_plan.txt $client = Send-Plan $plan Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet Implements the System.Management.Automation.PSCmdlet SetDefaultsCmdlet Sets default IP/Port of remote server. That allows to skip calling (-ip \"hostname\" -port XXX) in PlanCmdlets Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet StartPlanCmdlet Starts plan processing on remote server Returns Client object # Load module Import-Module ./Globals.Debug # Set default Hostname:Port Set-DefaultServer localhost 9996 # Read plan from file and send it to server $client = Get-Plan test_plan.txt | Send-Plan # Subscribe to PlanFinished event to run script { Write-Host \"Congratulations!\" } Register-ObjectEvent $client PlanFinished -Action { Write-Host \"Congratulations!\" } # Starts the plan processing on remote server Start-Plan Implements the PlanCmdlet StopPlanCmdlet Stops plan processing on remote server Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet SuspendPlanCmdlet Pauses plan processing on remote server. Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet"
  },
  "api/TM/TMCmdLet.InvokePlanCmdlet.html": {
    "href": "api/TM/TMCmdLet.InvokePlanCmdlet.html",
    "title": "Class InvokePlanCmdlet",
    "keywords": "Class InvokePlanCmdlet 1. reads plan data from file 2. sends plan to server 3. sends command to start plan processing 4. waits for processing finished Use Control-C - to stop plan processing To resume processing - use Start-Plan -resume Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet InvokePlanCmdlet Inherited Members System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Invoke\", \"Plan\")] [OutputType(new Type[]{typeof(SpotFull)})] public class InvokePlanCmdlet : PSCmdlet Properties | Improve this Doc View Source IpAddress Gets or sets the destination hostname or IP address. Declaration [Parameter(Position = 1, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"ComputerName\", \"IP\", \"Host\"})] public string IpAddress { get; set; } Property Value Type Description System.String The IP address. | Improve this Doc View Source Path Gets or sets the plan file. Declaration [Parameter(Position = 0, Mandatory = true, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"file\", \"f\"})] [ValidateNotNullOrEmpty] public string Path { get; set; } Property Value Type Description System.String The path to plan file. | Improve this Doc View Source Port Gets or sets a TCP port Declaration [Parameter(Position = 2, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"TcpPort\"})] public int Port { get; set; } Property Value Type Description System.Int32 The port. Methods | Improve this Doc View Source ProcessRecord() Processes the record. Declaration protected override void ProcessRecord() Overrides System.Management.Automation.Cmdlet.ProcessRecord() | Improve this Doc View Source StopProcessing() On Control-C, the plan execution will immediately cancel. This allows a cancellation to occur during plan execution without having to wait for the end of processing. Declaration protected override void StopProcessing() Overrides System.Management.Automation.Cmdlet.StopProcessing() See Also System.Management.Automation.PSCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.PlanCmdlet.html": {
    "href": "api/TM/TMCmdLet.PlanCmdlet.html",
    "title": "Class PlanCmdlet",
    "keywords": "Class PlanCmdlet Base class of PlanCommands Implements the System.Management.Automation.PSCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet ClearPlanCmdlet DisconnectServerCmdlet GetServerStateCmdlet SendCommandCmdlet SendDataCmdlet SendInfoCmdlet StartPlanCmdlet StopPlanCmdlet SuspendPlanCmdlet Inherited Members System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax public class PlanCmdlet : PSCmdlet Properties | Improve this Doc View Source IpAddress Gets or sets the destination hostname or IP address. Declaration [Parameter(Position = 1, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"ComputerName\", \"IP\", \"Host\"})] public string IpAddress { get; set; } Property Value Type Description System.String The ip address. | Improve this Doc View Source OK OK == success Declaration protected bool OK { get; set; } Property Value Type Description System.Boolean true if ok; otherwise, false . | Improve this Doc View Source Port Gets or sets whether to perform a TCP port Declaration [Parameter(Position = 2, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"TcpPort\"})] public int Port { get; set; } Property Value Type Description System.Int32 The port. Methods | Improve this Doc View Source ProcessRecord() ProcessRecord implementation Declaration protected override void ProcessRecord() Overrides System.Management.Automation.Cmdlet.ProcessRecord() See Also System.Management.Automation.PSCmdlet"
  },
  "api/TM/TMCmdLet.SendCommandCmdlet.html": {
    "href": "api/TM/TMCmdLet.SendCommandCmdlet.html",
    "title": "Class SendCommandCmdlet",
    "keywords": "Class SendCommandCmdlet Send EPlanCommand to server. public enum EPlanCommand { [Description(\"запрос на статус сервера\")] GETSTATE = 1, [Description(\"запрос на очистку плана \")] CLEARPLAN = 2, [Description(\"запрос на старт плана \")] STARTPLAN = 3, [Description(\"запрос на паузу\")] PAUSEPLAN = 4, [Description(\"запрос на останов\")] STOPPLAN = 5 } Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet SendCommandCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Send\", \"Command\")] [OutputType(new Type[]{typeof(bool)})] public class SendCommandCmdlet : PlanCmdlet Properties | Improve this Doc View Source Command Gets or sets the command send to server. public enum EPlanCommand { [Description(\"запрос на статус сервера\")] GETSTATE = 1, [Description(\"запрос на очистку плана \")] CLEARPLAN = 2, [Description(\"запрос на старт плана \")] STARTPLAN = 3, [Description(\"запрос на паузу\")] PAUSEPLAN = 4, [Description(\"запрос на останов\")] STOPPLAN = 5 } Declaration [Parameter(Mandatory = true, Position = 0, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [ValidateRange(1, 5)] public EPlanCommand Command { get; set; } Property Value Type Description EPlanCommand The command. Methods | Improve this Doc View Source ProcessRecord() Process record implementation Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() See Also PlanCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.SendDataCmdlet.html": {
    "href": "api/TM/TMCmdLet.SendDataCmdlet.html",
    "title": "Class SendDataCmdlet",
    "keywords": "Class SendDataCmdlet Class used to send bulk of raw data (byte[]) to server Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet SendDataCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Send\", \"Data\")] [OutputType(new Type[]{typeof(bool)})] public class SendDataCmdlet : PlanCmdlet Properties | Improve this Doc View Source Data RAW BULK of DATA sent to server. Declaration [Parameter(Mandatory = true, Position = 0, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [ValidateNotNullOrEmpty] public byte[] Data { get; set; } Property Value Type Description System.Byte [] The data. Methods | Improve this Doc View Source ProcessRecord() Process record implementation Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() See Also PlanCmdlet System.Management.Automation.PSCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.SendInfoCmdlet.html": {
    "href": "api/TM/TMCmdLet.SendInfoCmdlet.html",
    "title": "Class SendInfoCmdlet",
    "keywords": "Class SendInfoCmdlet Send \"info\" message to server Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet SendInfoCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Send\", \"Info\")] [OutputType(new Type[]{typeof(bool)})] public class SendInfoCmdlet : PlanCmdlet Properties | Improve this Doc View Source Info Gets or sets the info message send to server. Declaration [Parameter(Mandatory = true, Position = 0, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [ValidateNotNullOrEmpty] public string Info { get; set; } Property Value Type Description System.String The information. Methods | Improve this Doc View Source ProcessRecord() Process Record Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() See Also PlanCmdlet System.Management.Automation.PSCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.SendPlanCmdlet.html": {
    "href": "api/TM/TMCmdLet.SendPlanCmdlet.html",
    "title": "Class SendPlanCmdlet",
    "keywords": "Class SendPlanCmdlet Sends plan data to remote server. Returns Client object (the same object as in Connect-Server) $client = Get-Plan test_plan.txt | Send-Plan or $plan = Get-Plan test_plan.txt $client = Send-Plan $plan Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet Implements the System.Management.Automation.PSCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet SendPlanCmdlet Inherited Members System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Send\", \"Plan\")] [OutputType(new Type[]{typeof(Client)})] public class SendPlanCmdlet : PSCmdlet Properties | Improve this Doc View Source Input Gets or sets the input object. Declaration [Parameter(Position = 0, ValueFromPipeline = true)] [Alias(new string[]{\"Plan\"})] public object Input { get; set; } Property Value Type Description System.Object The input object. | Improve this Doc View Source IpAddress Gets or sets the destination hostname or IP address. Declaration [Parameter(Position = 1, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"ComputerName\", \"IP\", \"Host\"})] public string IpAddress { get; set; } Property Value Type Description System.String The IP address. | Improve this Doc View Source Port Gets or sets the TCP port Declaration [Parameter(Position = 2, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"TcpPort\"})] public int Port { get; set; } Property Value Type Description System.Int32 The port. Methods | Improve this Doc View Source EndProcessing() Ends the processing. Declaration protected override void EndProcessing() Overrides System.Management.Automation.Cmdlet.EndProcessing() | Improve this Doc View Source ProcessRecord() ProcessRecord implementation Declaration protected override void ProcessRecord() Overrides System.Management.Automation.Cmdlet.ProcessRecord() | Improve this Doc View Source StopProcessing() On receiving the StopProcessing() request, the cmdlet will immediately cancel. This allows a cancellation to occur during a connection request without having to wait for the timeout. Declaration protected override void StopProcessing() Overrides System.Management.Automation.Cmdlet.StopProcessing() See Also System.Management.Automation.PSCmdlet PlanCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.SetDefaultsCmdlet.html": {
    "href": "api/TM/TMCmdLet.SetDefaultsCmdlet.html",
    "title": "Class SetDefaultsCmdlet",
    "keywords": "Class SetDefaultsCmdlet Sets default IP/Port of remote server. That allows to skip calling (-ip \"hostname\" -port XXX) in PlanCmdlets Implements the System.Management.Automation.Cmdlet Implements the System.Management.Automation.PSCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet SetDefaultsCmdlet Inherited Members System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Set\", \"DefaultServer\")] [OutputType(new Type[]{typeof(bool)})] public class SetDefaultsCmdlet : PSCmdlet Properties | Improve this Doc View Source IpAddress Gets or sets the destination hostname or IP address. Declaration [Parameter(Mandatory = true, Position = 0, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [ValidateNotNullOrEmpty] [Alias(new string[]{\"ComputerName\", \"IP\", \"Host\"})] public string IpAddress { get; set; } Property Value Type Description System.String The ip address. | Improve this Doc View Source Port Gets or sets whether to perform a TCP port Declaration [ValidateRange(0, 65535)] [Parameter(Mandatory = true, Position = 1, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] [Alias(new string[]{\"TcpPort\"})] public int Port { get; set; } Property Value Type Description System.Int32 The port. Methods | Improve this Doc View Source ProcessRecord() Process record implementation Declaration protected override void ProcessRecord() Overrides System.Management.Automation.Cmdlet.ProcessRecord() See Also System.Management.Automation.PSCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.StartPlanCmdlet.html": {
    "href": "api/TM/TMCmdLet.StartPlanCmdlet.html",
    "title": "Class StartPlanCmdlet",
    "keywords": "Class StartPlanCmdlet Starts plan processing on remote server Returns Client object # Load module Import-Module ./Globals.Debug # Set default Hostname:Port Set-DefaultServer localhost 9996 # Read plan from file and send it to server $client = Get-Plan test_plan.txt | Send-Plan # Subscribe to PlanFinished event to run script { Write-Host \"Congratulations!\" } Register-ObjectEvent $client PlanFinished -Action { Write-Host \"Congratulations!\" } # Starts the plan processing on remote server Start-Plan Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet StartPlanCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Start\", \"Plan\")] [OutputType(new Type[]{typeof(Client)})] public class StartPlanCmdlet : PlanCmdlet Properties | Improve this Doc View Source Resume Resume plan processing Client Declaration [Parameter(Position = 0, ValueFromPipeline = true, ValueFromPipelineByPropertyName = true)] public SwitchParameter Resume { get; set; } Property Value Type Description System.Management.Automation.SwitchParameter The resume. Methods | Improve this Doc View Source ProcessRecord() Start plan processing on remote server Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() | Improve this Doc View Source StopProcessing() On Control-C, the plan execution will immediately cancel. This allows a cancellation to occur during plan execution without having to wait for the end of processing. Declaration protected override void StopProcessing() Overrides System.Management.Automation.Cmdlet.StopProcessing() See Also PlanCmdlet"
  },
  "api/TM/TMCmdLet.StopPlanCmdlet.html": {
    "href": "api/TM/TMCmdLet.StopPlanCmdlet.html",
    "title": "Class StopPlanCmdlet",
    "keywords": "Class StopPlanCmdlet Stops plan processing on remote server Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet StopPlanCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Stop\", \"Plan\")] [OutputType(new Type[]{typeof(bool)})] public class StopPlanCmdlet : PlanCmdlet Methods | Improve this Doc View Source ProcessRecord() Process record implementation Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() See Also PlanCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMCmdLet.SuspendPlanCmdlet.html": {
    "href": "api/TM/TMCmdLet.SuspendPlanCmdlet.html",
    "title": "Class SuspendPlanCmdlet",
    "keywords": "Class SuspendPlanCmdlet Pauses plan processing on remote server. Implements the System.Management.Automation.Cmdlet Implements the PlanCmdlet Inheritance System.Object System.Management.Automation.Internal.InternalCommand System.Management.Automation.Cmdlet System.Management.Automation.PSCmdlet PlanCmdlet SuspendPlanCmdlet Inherited Members PlanCmdlet.IpAddress PlanCmdlet.Port PlanCmdlet.OK System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String) System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String) System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo) System.Management.Automation.PSCmdlet.GetVariableValue(System.String) System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object) System.Management.Automation.PSCmdlet.ParameterSetName System.Management.Automation.PSCmdlet.MyInvocation System.Management.Automation.PSCmdlet.InvokeCommand System.Management.Automation.PSCmdlet.Host System.Management.Automation.PSCmdlet.SessionState System.Management.Automation.PSCmdlet.Events System.Management.Automation.PSCmdlet.JobRepository System.Management.Automation.PSCmdlet.InvokeProvider System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String) System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.WriteObject(System.Object) System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean) System.Management.Automation.Cmdlet.WriteVerbose(System.String) System.Management.Automation.Cmdlet.WriteWarning(System.String) System.Management.Automation.Cmdlet.WriteCommandDetail(System.String) System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord) System.Management.Automation.Cmdlet.WriteDebug(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String) System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String) System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean) System.Management.Automation.Cmdlet.Invoke() System.Management.Automation.Cmdlet.Invoke<T>() System.Management.Automation.Cmdlet.TransactionAvailable() System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord) System.Management.Automation.Cmdlet.BeginProcessing() System.Management.Automation.Cmdlet.EndProcessing() System.Management.Automation.Cmdlet.StopProcessing() System.Management.Automation.Cmdlet.Stopping System.Management.Automation.Cmdlet.CommandRuntime System.Management.Automation.Cmdlet.CurrentPSTransaction System.Management.Automation.Internal.InternalCommand.CommandOrigin System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMCmdLet Assembly : TM.dll Syntax [Cmdlet(\"Suspend\", \"Plan\")] [OutputType(new Type[]{typeof(bool)})] public class SuspendPlanCmdlet : PlanCmdlet Methods | Improve this Doc View Source ProcessRecord() Process record implementation. Declaration protected override void ProcessRecord() Overrides PlanCmdlet.ProcessRecord() See Also PlanCmdlet System.Management.Automation.Cmdlet"
  },
  "api/TM/TMPlan.EPlanCommand.html": {
    "href": "api/TM/TMPlan.EPlanCommand.html",
    "title": "Enum EPlanCommand",
    "keywords": "Enum EPlanCommand команды на выполнение CMD в пакете пересылки клиент->сервер Namespace : TMPlan Assembly : TM.dll Syntax public enum EPlanCommand Fields Name Description CLEARPLAN запрос на очистку плана GETSTATE запрос на статус сервера PAUSEPLAN запрос на паузу STARTPLAN запрос на старт плана STOPPLAN запрос на останов Extension Methods Extensions.Description()"
  },
  "api/TM/TMPlan.html": {
    "href": "api/TM/TMPlan.html",
    "title": "Namespace TMPlan",
    "keywords": "Namespace TMPlan Classes PlanClient PlanExt ReadPlanException Exception during reading plan from a file Implements the System.Exception SendPlanException Exception during sending plan to server Implements the System.Exception Structs Spot один \"выстрел\" для пересылки (направление+энергия+интенсивность) SpotFull Объединённая структура Spot + SpotResult SpotResult Структура с результатами выполнения плана облучения SpotTopass один \"выстрел\" для пересылки (направление+энергия+интенсивность) Enums EPlanCommand команды на выполнение CMD в пакете пересылки клиент->сервер Delegates PlanResultsHandler Delegate PlanResultsHandler"
  },
  "api/TM/TMPlan.PlanClient.html": {
    "href": "api/TM/TMPlan.PlanClient.html",
    "title": "Class PlanClient",
    "keywords": "Class PlanClient Inheritance System.Object Client PlanClient Implements System.IDisposable Inherited Members Client.ConnectionTryCount Client.ReadData Client.Sender Client.DataBlockReceived Client.ErrorReceived Client.InfoReceived Client.ServerConnected Client.ServerDisconnected Client.ServerStateChanged Client.Header Client.IP Client.IpAddress Client.IsConnected Client.LocalEndPoint Client.LocalIpAddress Client.LocalPort Client.Port Client.ProcessingIsOn Client.RemoteEndPoint Client.StateData Client.Dispose() Client.Connect(String, Int32) Client.Disconnect() Client.Send(Byte[], EServerType) Client.Send(BufferChunk, EServerType) Client.Send(UInt32, Byte[], EServerType) Client.Send(Packet) Client.SendInfo(String, EServerType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMPlan Assembly : TM.dll Syntax public class PlanClient : Client, IDisposable Constructors | Improve this Doc View Source PlanClient() Declaration public PlanClient() Fields | Improve this Doc View Source This Declaration public static PlanClient This Field Value Type Description PlanClient Properties | Improve this Doc View Source EPlanState Gets the processing state of the server. Declaration public EPlanState EPlanState { get; protected set; } Property Value Type Description EPlanState The state of processing on the server. | Improve this Doc View Source Plan Loaded plan data Declaration public List<Spot> Plan { get; set; } Property Value Type Description System.Collections.Generic.List < Spot > The plan. | Improve this Doc View Source PlanResults Processed plan results Declaration public List<SpotResult> PlanResults { get; set; } Property Value Type Description System.Collections.Generic.List < SpotResult > The plan results. | Improve this Doc View Source PlanState Declaration public EPlanState PlanState { get; } Property Value Type Description EPlanState | Improve this Doc View Source SpotsPassed Gets the number of spots processed. Declaration public uint SpotsPassed { get; } Property Value Type Description System.UInt32 The spots passed. | Improve this Doc View Source SpotsTotal Gets the number of spots total in plan. Declaration public uint SpotsTotal { get; } Property Value Type Description System.UInt32 The spots total. Methods | Improve this Doc View Source AskServerState() SendCommand(EPlanCommand.GETSTATE); to the server. Declaration public bool AskServerState() Returns Type Description System.Boolean true if OK, false otherwise. | Improve this Doc View Source Clear() Clears the plan data. Declaration public bool Clear() Returns Type Description System.Boolean true if OK, false otherwise. | Improve this Doc View Source Dump() Dumps the plan results. Declaration public void Dump() | Improve this Doc View Source Dump(List<Spot>) Dumps the plan data. Declaration public static void Dump(List<Spot> plan) Parameters Type Name Description System.Collections.Generic.List < Spot > plan The plan data. | Improve this Doc View Source Dump(List<SpotResult>) Dumps the plan results. Declaration public static void Dump(List<SpotResult> results) Parameters Type Name Description System.Collections.Generic.List < SpotResult > results The results. | Improve this Doc View Source Execute(String, String, Int32) LoadPlan(file) - loads the specified file with plan data. SendPlan() - sends plan to the server specified by ip nad port StartPlan() - starts plan processing on the server while (ProcessingIsOn) - waits for results of processing when results of plan processing received from server, fills PlanResults list if (ServerState == EPlanState.FINISHED) - execute PlanFinished() event Declaration public List<SpotFull> Execute(string file, string ip = null, int port = 0) Parameters Type Name Description System.String file The file with plan data. System.String ip The server IP. System.Int32 port The port. Returns Type Description System.Collections.Generic.List < SpotFull > Dictionary<System.Int32, SpotFull>. | Improve this Doc View Source Load(String) Reads the file and loads the plan data. Declaration public List<Spot> Load(string file) Parameters Type Name Description System.String file The file with plan data. Returns Type Description System.Collections.Generic.List < Spot > BufferChunk. The raw array of bytes Exceptions Type Condition System.IO.FileNotFoundException ReadPlanException System.IO.FileNotFoundException | Improve this Doc View Source LoadPlan(String) Declaration public static List<Spot> LoadPlan(string file) Parameters Type Name Description System.String file Returns Type Description System.Collections.Generic.List < Spot > | Improve this Doc View Source Pause() Pauses the plan processing on server. Declaration public bool Pause() Returns Type Description System.Boolean true if OK, false otherwise. | Improve this Doc View Source ProcessData(BufferChunk, Int32) Converts BufferChunk to SpotResults Declaration public override void ProcessData(BufferChunk data, int bytesRead) Parameters Type Name Description BufferChunk data The data. System.Int32 bytesRead The bytes read. Overrides Client.ProcessData(BufferChunk, Int32) | Improve this Doc View Source ProcessState(StateData) Declaration public override void ProcessState(StateData data) Parameters Type Name Description StateData data Overrides Client.ProcessState(StateData) | Improve this Doc View Source Reset() Declaration public override void Reset() Overrides Client.Reset() | Improve this Doc View Source Send(List<Spot>) Sends the loaded plan to server. Declaration public bool Send(List<Spot> plan = null) Parameters Type Name Description System.Collections.Generic.List < Spot > plan The plan. Returns Type Description System.Boolean true if OK, false otherwise. | Improve this Doc View Source Send(List<Spot>, UInt32) Sends the plan to server. Declaration public bool Send(List<Spot> spots, uint nblocks = 10U) Parameters Type Name Description System.Collections.Generic.List < Spot > spots The spots. System.UInt32 nblocks The nblocks. Returns Type Description System.Boolean true if OK, false otherwise. Exceptions Type Condition SendPlanException | Improve this Doc View Source Send(Object[]) Sends the plan as array of PSObjects to remote server Declaration public bool Send(object[] arr) Parameters Type Name Description System.Object [] arr The array of PSObjects. Returns Type Description System.Boolean true if success, false otherwise. | Improve this Doc View Source SendCommand(EPlanCommand, EServerType) Sends the EPlanCommand to server. public enum EPlanCommand { [Description(\"запрос на статус сервера\")] GETSTATE = 1, [Description(\"запрос на очистку плана \")] CLEARPLAN = 2, [Description(\"запрос на старт плана \")] STARTPLAN = 3, [Description(\"запрос на паузу\")] PAUSEPLAN = 4, [Description(\"запрос на останов\")] STOPPLAN = 5 } Declaration public bool SendCommand(EPlanCommand cmd, EServerType server_type = EServerType.MCS) Parameters Type Name Description EPlanCommand cmd The EPlanCommand. EServerType server_type Type of the server. Returns Type Description System.Boolean true on success, false otherwise. Exceptions Type Condition SendCommandException | Improve this Doc View Source Start() Starts the plan processing on remote server. Declaration public bool Start() Returns Type Description System.Boolean true if OK, false otherwise. | Improve this Doc View Source Stop() Stops the plan processing on remote server. Declaration public bool Stop() Returns Type Description System.Boolean true if OK, false otherwise. Events | Improve this Doc View Source PlanCleared Occurs when [plan cleraed]. Declaration public event ClientHandler PlanCleared Event Type Type Description ClientHandler | Improve this Doc View Source PlanFinished Occurs when [plan processing is finished]. Declaration public event ClientHandler PlanFinished Event Type Type Description ClientHandler | Improve this Doc View Source PlanLoaded Occurs when [plan loaded]. Declaration public event ClientHandler PlanLoaded Event Type Type Description ClientHandler | Improve this Doc View Source PlanPaused Occurs when [plan paused]. Declaration public event ClientHandler PlanPaused Event Type Type Description ClientHandler | Improve this Doc View Source PlanResultsProcessed Occurs when part of [plan results processed and received]. Declaration public event PlanResultsHandler PlanResultsProcessed Event Type Type Description PlanResultsHandler | Improve this Doc View Source PlanStarted Occurs when [plan started]. Declaration public event ClientHandler PlanStarted Event Type Type Description ClientHandler | Improve this Doc View Source PlanStopped Occurs when [plan stopped]. Declaration public event ClientHandler PlanStopped Event Type Type Description ClientHandler Implements System.IDisposable"
  },
  "api/TM/TMPlan.PlanExt.html": {
    "href": "api/TM/TMPlan.PlanExt.html",
    "title": "Class PlanExt",
    "keywords": "Class PlanExt Inheritance System.Object PlanExt Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMPlan Assembly : TM.dll Syntax public static class PlanExt Methods | Improve this Doc View Source Add(BufferChunk, Spot) Adds the specified plan. Declaration public static BufferChunk Add(this BufferChunk buf, Spot plan) Parameters Type Name Description BufferChunk buf The buf. Spot plan The plan. Returns Type Description BufferChunk BufferChunk. | Improve this Doc View Source NextResultSpot(BufferChunk) Nexts the result spot. Declaration public static SpotResult? NextResultSpot(this BufferChunk buf) Parameters Type Name Description BufferChunk buf The buf. Returns Type Description System.Nullable < SpotResult > System.Nullable<SpotResult>. | Improve this Doc View Source NextSpot(BufferChunk) Nexts the Spot. Declaration public static Spot? NextSpot(this BufferChunk buf) Parameters Type Name Description BufferChunk buf The buffer chunk. Returns Type Description System.Nullable < Spot > Spot. | Improve this Doc View Source NextSpotFull(BufferChunk) Nexts the full spot. Declaration public static SpotFull? NextSpotFull(this BufferChunk buf) Parameters Type Name Description BufferChunk buf The buf. Returns Type Description System.Nullable < SpotFull > System.Nullable<SpotFull>. | Improve this Doc View Source NextSpotResult(BufferChunk) Nexts the plan spot result. Declaration public static SpotResult? NextSpotResult(this BufferChunk buf) Parameters Type Name Description BufferChunk buf The buf. Returns Type Description System.Nullable < SpotResult > System.Nullable<SpotResult>."
  },
  "api/TM/TMPlan.PlanResultsHandler.html": {
    "href": "api/TM/TMPlan.PlanResultsHandler.html",
    "title": "Delegate PlanResultsHandler",
    "keywords": "Delegate PlanResultsHandler Delegate PlanResultsHandler Namespace : TMPlan Assembly : TM.dll Syntax public delegate void PlanResultsHandler(List<SpotResult> results); Parameters Type Name Description System.Collections.Generic.List < SpotResult > results The results."
  },
  "api/TM/TMPlan.ReadPlanException.html": {
    "href": "api/TM/TMPlan.ReadPlanException.html",
    "title": "Class ReadPlanException",
    "keywords": "Class ReadPlanException Exception during reading plan from a file Implements the System.Exception Inheritance System.Object System.Exception ReadPlanException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMPlan Assembly : TM.dll Syntax public class ReadPlanException : Exception, ISerializable Constructors | Improve this Doc View Source ReadPlanException(String) Initializes a new instance of the ReadPlanException class. Declaration public ReadPlanException(string file) Parameters Type Name Description System.String file The file. Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/TM/TMPlan.SendPlanException.html": {
    "href": "api/TM/TMPlan.SendPlanException.html",
    "title": "Class SendPlanException",
    "keywords": "Class SendPlanException Exception during sending plan to server Implements the System.Exception Inheritance System.Object System.Exception SendPlanException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMPlan Assembly : TM.dll Syntax public class SendPlanException : Exception, ISerializable Constructors | Improve this Doc View Source SendPlanException() Initializes a new instance of the SendPlanException class. Declaration public SendPlanException() Implements System.Runtime.Serialization.ISerializable See Also System.Exception"
  },
  "api/TM/TMPlan.Spot.html": {
    "href": "api/TM/TMPlan.Spot.html",
    "title": "Struct Spot",
    "keywords": "Struct Spot один \"выстрел\" для пересылки (направление+энергия+интенсивность) Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMPlan Assembly : TM.dll Syntax public struct Spot Fields | Improve this Doc View Source Length The length of structure Declaration public static uint Length Field Value Type Description System.UInt32 Properties | Improve this Doc View Source energy энергия, MeV Declaration public float energy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source id уникальный идентификатор записи (напр. счетчик) Declaration public int id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source pcount количество протонов Declaration public float pcount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source xangle угол по горизонтали Declaration public float xangle { get; set; } Property Value Type Description System.Single | Improve this Doc View Source zangle угол по вертикали Declaration public float zangle { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/TM/TMPlan.SpotFull.html": {
    "href": "api/TM/TMPlan.SpotFull.html",
    "title": "Struct SpotFull",
    "keywords": "Struct SpotFull Объединённая структура Spot + SpotResult Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMPlan Assembly : TM.dll Syntax public struct SpotFull Fields | Improve this Doc View Source Length The length Declaration public static uint Length Field Value Type Description System.UInt32 Properties | Improve this Doc View Source changed состояние изменилось Declaration public int changed { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source done выстрел сделан Declaration public int done { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source energy энергия, MeV Declaration public float energy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source id уникальный идентификатор записи (напр. счетчик) Declaration public int id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source need_to_sent надо отослать изменения клиенту Declaration public int need_to_sent { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source pcount количество протонов Declaration public float pcount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source result_pcount результат количество протонов Declaration public float result_pcount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source result_xangle результат угол по горизонтали Declaration public float result_xangle { get; set; } Property Value Type Description System.Single | Improve this Doc View Source result_zangle результат угол по вертикали Declaration public float result_zangle { get; set; } Property Value Type Description System.Single | Improve this Doc View Source xangle угол по горизонтали Declaration public float xangle { get; set; } Property Value Type Description System.Single | Improve this Doc View Source zangle угол по вертикали Declaration public float zangle { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/TM/TMPlan.SpotResult.html": {
    "href": "api/TM/TMPlan.SpotResult.html",
    "title": "Struct SpotResult",
    "keywords": "Struct SpotResult Структура с результатами выполнения плана облучения Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMPlan Assembly : TM.dll Syntax public struct SpotResult Fields | Improve this Doc View Source Length The length Declaration public static uint Length Field Value Type Description System.UInt32 Properties | Improve this Doc View Source done результат выполнения MCS_SHOT_RESULT_DONE Declaration public int done { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source id уникальный идентификатор записи (напр. счетчик) Declaration public int id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source result_pcount количество протонов Declaration public float result_pcount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source result_xangle угол по горизонтали Declaration public float result_xangle { get; set; } Property Value Type Description System.Single | Improve this Doc View Source result_zangle угол по вертикали Declaration public float result_zangle { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/TM/TMPlan.SpotTopass.html": {
    "href": "api/TM/TMPlan.SpotTopass.html",
    "title": "Struct SpotTopass",
    "keywords": "Struct SpotTopass один \"выстрел\" для пересылки (направление+энергия+интенсивность) Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMPlan Assembly : TM.dll Syntax public struct SpotTopass Fields | Improve this Doc View Source energy энергия, MeV Declaration public float energy Field Value Type Description System.Single | Improve this Doc View Source Length The length Declaration public static uint Length Field Value Type Description System.UInt32 Properties | Improve this Doc View Source id уникальный идентификатор записи (напр. счетчик) Declaration public int id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source pcount количество протонов Declaration public float pcount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source xangle угол по горизонтали Declaration public float xangle { get; set; } Property Value Type Description System.Single | Improve this Doc View Source zangle угол по вертикали Declaration public float zangle { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/TM/TMSrv.ACCServer.html": {
    "href": "api/TM/TMSrv.ACCServer.html",
    "title": "Class ACCServer",
    "keywords": "Class ACCServer Inheritance System.Object Server ACCServer Implements System.IDisposable Inherited Members Server.Servers Server.DACADC_MAX_DAC Server.DACADC_MAX_ADC Server.handle Server.ip Server.port Server.ConnectType Server.ConnectAvailable Server.type Server.name Server.OnProcessing Server.COM Server.lnk Server.ControlID Server.ControlRight Server.Controls Server.ControlsCount Server.DevStatus Server.InWait Server.LogPath Server.NeedAutoReconnect Server.NeedForReconnect Server.buf Server.timeout Server.TimerTicks Server.TMSettings Server.traceToLog Server.update Server.UpdatePeriod Server.UpdateTimerID Server.configChanged Server.DS_LangText Server.AfterTryConnect Server.AfterDisconnect Server.Disconnect Server.Connect Server.ChangeDevicesStatus Server.FreeServerData Server.ParseIncomingPacket Server.PostParseData Server.MakeCommand Server.Client Server.ServerData Server.Dispose() Server.Dispose(Boolean) Server.AddServer(String, String, Int32, EServerType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class ACCServer : Server, IDisposable Implements System.IDisposable"
  },
  "api/TM/TMSrv.ComPortData.html": {
    "href": "api/TM/TMSrv.ComPortData.html",
    "title": "Class ComPortData",
    "keywords": "Class ComPortData Class ComPortData. Inheritance System.Object ComPortData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class ComPortData Constructors | Improve this Doc View Source ComPortData() Initializes a new instance of the class. Declaration public ComPortData() Properties | Improve this Doc View Source baudrate COM port baud rate Declaration public int baudrate { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source comport номер COM порта Declaration public int comport { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source config_flag настройки сконфигурированы под реальный порт, можно работать Declaration public int config_flag { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source databits The COM port data bits Declaration public int databits { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source devicename The device name Declaration public string devicename { get; set; } Property Value Type Description System.String | Improve this Doc View Source inputq Sets input queue length in OpenComConfig Declaration public int inputq { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source outputq Sets output queue length in OpenComConfig Declaration public int outputq { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source parity The COM port parity Declaration public int parity { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PortBusyFlag Declaration public int PortBusyFlag { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PortOpen The port open Declaration public int PortOpen { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RS232Error The RS232 error Declaration public int RS232Error { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source stopbits The COM port stop bits Declaration public int stopbits { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source timeout The timeout Declaration public double timeout { get; set; } Property Value Type Description System.Double"
  },
  "api/TM/TMSrv.DACADC_data.html": {
    "href": "api/TM/TMSrv.DACADC_data.html",
    "title": "Class DACADC_data",
    "keywords": "Class DACADC_data серверные данные только для сервера вакуума Inheritance System.Object DACADC_data Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class DACADC_data Fields | Improve this Doc View Source adc The adc Declaration public double[] adc Field Value Type Description System.Double [] | Improve this Doc View Source addr The addr Declaration public byte addr Field Value Type Description System.Byte | Improve this Doc View Source dac The dac Declaration public ushort[] dac Field Value Type Description System.UInt16 [] | Improve this Doc View Source DACADC_MAX_ADC максимальное количество каналов в сервере Declaration public static int DACADC_MAX_ADC Field Value Type Description System.Int32 | Improve this Doc View Source DACADC_MAX_DAC \"максимальное количество каналов в сервере Declaration public static int DACADC_MAX_DAC Field Value Type Description System.Int32 | Improve this Doc View Source MAX_ADC максимальное количество входных каналов на этом устройстве Declaration public byte MAX_ADC Field Value Type Description System.Byte | Improve this Doc View Source MAX_DAC максимальное количество выходных каналов на этом устройстве Declaration public byte MAX_DAC Field Value Type Description System.Byte"
  },
  "api/TM/TMSrv.DevDescr.html": {
    "href": "api/TM/TMSrv.DevDescr.html",
    "title": "Class DevDescr",
    "keywords": "Class DevDescr Class DevDescr. Inheritance System.Object DevDescr Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class DevDescr Fields | Improve this Doc View Source configured устройство отконфигурировано, можно делать запросы Declaration public int configured Field Value Type Description System.Int32 | Improve this Doc View Source dev_type тип устройства (DEVICE_TYPE_DIMS etc) Declaration public int dev_type Field Value Type Description System.Int32 | Improve this Doc View Source DN индивидуальный адрес устройства Declaration public uint DN Field Value Type Description System.UInt32 | Improve this Doc View Source err_InWait The error in wait Declaration public byte err_InWait Field Value Type Description System.Byte | Improve this Doc View Source name название устройства для вывода сообщений в консоль Declaration public string name Field Value Type Description System.String | Improve this Doc View Source status статус устройства (согласно TM протоколу) ( DEVICE_STATUS_OK etc ) Declaration public int status Field Value Type Description System.Int32 | Improve this Doc View Source StatusControl контрол статуса; черный-неотконф., красный-поломка, зеленый-ОК Declaration public int StatusControl Field Value Type Description System.Int32"
  },
  "api/TM/TMSrv.ECServer.html": {
    "href": "api/TM/TMSrv.ECServer.html",
    "title": "Class ECServer",
    "keywords": "Class ECServer Inheritance System.Object Server ECServer Implements System.IDisposable Inherited Members Server.Servers Server.DACADC_MAX_DAC Server.DACADC_MAX_ADC Server.handle Server.ip Server.port Server.ConnectType Server.ConnectAvailable Server.type Server.name Server.OnProcessing Server.COM Server.lnk Server.ControlID Server.ControlRight Server.Controls Server.ControlsCount Server.DevStatus Server.InWait Server.LogPath Server.NeedAutoReconnect Server.NeedForReconnect Server.buf Server.timeout Server.TimerTicks Server.TMSettings Server.traceToLog Server.update Server.UpdatePeriod Server.UpdateTimerID Server.configChanged Server.DS_LangText Server.AfterTryConnect Server.AfterDisconnect Server.Disconnect Server.Connect Server.ChangeDevicesStatus Server.FreeServerData Server.ParseIncomingPacket Server.PostParseData Server.MakeCommand Server.Client Server.ServerData Server.Dispose() Server.Dispose(Boolean) Server.AddServer(String, String, Int32, EServerType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class ECServer : Server, IDisposable Implements System.IDisposable"
  },
  "api/TM/TMSrv.html": {
    "href": "api/TM/TMSrv.html",
    "title": "Namespace TMSrv",
    "keywords": "Namespace TMSrv Classes ACCServer ComPortData Class ComPortData. DACADC_data серверные данные только для сервера вакуума DevDescr Class DevDescr. ECServer MainCServer PFSProxyServer PFSServer Server универсальный сервер - источник данных для подключения к разным источникам данных: TCP серверам по протоколу TM, устройствам через линклиб или com порт TermoServer TmLnk VCControl визуализация датчика. Добавляется серверу посредством AddVCControl XRayServer Structs MC_PT формат структуры обмена с программой MainContol как сервером (версия Протвино, Обнинск) client to server: MC_PT_ILH формат структуры обмена с программой MainContol как сервером (версия Израиль), заголовок Server.ntm для пакетов, реализующих какой-то уникальный протокол ServerState состояние сервера MainCServer - структура ServerData в DataServer StateData состояние сервера - структура для пересылки"
  },
  "api/TM/TMSrv.MainCServer.html": {
    "href": "api/TM/TMSrv.MainCServer.html",
    "title": "Class MainCServer",
    "keywords": "Class MainCServer Inheritance System.Object Server MainCServer Implements System.IDisposable Inherited Members Server.Servers Server.DACADC_MAX_DAC Server.DACADC_MAX_ADC Server.handle Server.ip Server.port Server.ConnectType Server.ConnectAvailable Server.type Server.name Server.OnProcessing Server.COM Server.lnk Server.ControlID Server.ControlRight Server.Controls Server.ControlsCount Server.DevStatus Server.InWait Server.LogPath Server.NeedAutoReconnect Server.NeedForReconnect Server.buf Server.timeout Server.TimerTicks Server.TMSettings Server.traceToLog Server.update Server.UpdatePeriod Server.UpdateTimerID Server.configChanged Server.DS_LangText Server.AfterTryConnect Server.AfterDisconnect Server.Disconnect Server.Connect Server.ChangeDevicesStatus Server.FreeServerData Server.ParseIncomingPacket Server.PostParseData Server.MakeCommand Server.Client Server.ServerData Server.Dispose() Server.Dispose(Boolean) Server.AddServer(String, String, Int32, EServerType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class MainCServer : Server, IDisposable Implements System.IDisposable"
  },
  "api/TM/TMSrv.MC_PT.html": {
    "href": "api/TM/TMSrv.MC_PT.html",
    "title": "Struct MC_PT",
    "keywords": "Struct MC_PT формат структуры обмена с программой MainContol как сервером (версия Протвино, Обнинск) client to server: Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMSrv Assembly : TM.dll Syntax public struct MC_PT Fields | Improve this Doc View Source fileContours_name полное имя файла контуров Declaration public byte[] fileContours_name Field Value Type Description System.Byte [] | Improve this Doc View Source filePlan_name полное имя файла-задания на терапию Declaration public byte[] filePlan_name Field Value Type Description System.Byte [] | Improve this Doc View Source fileProection_name полное имя файла проекций Declaration public byte[] fileProection_name Field Value Type Description System.Byte [] | Improve this Doc View Source Fl_ChAngle делать остановку при смене угла (0 - не делать, 1 - делать) Declaration public int Fl_ChAngle Field Value Type Description System.Int32 | Improve this Doc View Source Fl_ChHeight делать остановку при смене высоты (0 - не делать, 1 - делать) Declaration public int Fl_ChHeight Field Value Type Description System.Int32 | Improve this Doc View Source ir_tm время выполнения плана от начала до останова Declaration public float ir_tm Field Value Type Description System.Single | Improve this Doc View Source Length The length of MC_PT structure Declaration public static uint Length Field Value Type Description System.UInt32 | Improve this Doc View Source PFSMode режим облучения (1 – сидя, 3 - лежа) Declaration public int PFSMode Field Value Type Description System.Int32 | Improve this Doc View Source s_info статус/признак передаваемой информации Declaration public int s_info Field Value Type Description System.Int32 | Improve this Doc View Source t_procent передается процент, с которого надо начать выполнение задания Declaration public double t_procent Field Value Type Description System.Double"
  },
  "api/TM/TMSrv.MC_PT_ILH.html": {
    "href": "api/TM/TMSrv.MC_PT_ILH.html",
    "title": "Struct MC_PT_ILH",
    "keywords": "Struct MC_PT_ILH формат структуры обмена с программой MainContol как сервером (версия Израиль), заголовок Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMSrv Assembly : TM.dll Syntax public struct MC_PT_ILH Fields | Improve this Doc View Source ir_tm The ir tm Declaration public int ir_tm Field Value Type Description System.Int32 | Improve this Doc View Source Length The length of MC_PT_ILH structure Declaration public static uint Length Field Value Type Description System.UInt32 | Improve this Doc View Source s_info статус/признак передаваемой информации client to server: 0 – запрос о состоянии ускорителя, 1 – начать лечение, 2 – прервать лечение, 3 – временно приостановить лечение, 4 – возобновить лечение server to clent: -1 – ускоритель не готов; 0 – ускоритель готов; 1 – файл-задание на терапию успешно принят сервером 2 – сеанс лечения начался в pt.t_procent передается процент выполнения задания в pt.file_name передается имя файла истории облучения 3 – сеанс лечения закончился 4 – сеанс лечения прерван 5 – сеанс лечения временно приостановлен по внешнему запросу 6 – сеанс лечения временно приостановлен по команде оператора ускорителя 7 – сеанс лечения временно приостановлен. Требуется верификация перед сменой направления. 8 – сеанс лечения временно приостановлен. Требуется верификация перед сменой высоты. 15 – сеанс лечения временно приостановлен. Требуется верификация перед сменой высоты и ракурса. 9 – сеанс лечения временно приостановлен. \"Кресло\" не встало в требуемую позицию. Declaration public int s_info Field Value Type Description System.Int32 | Improve this Doc View Source sign signature: \"TMCL\" Declaration public byte[] sign Field Value Type Description System.Byte [] | Improve this Doc View Source spots_count количество выстрелов в отчете Declaration public int spots_count Field Value Type Description System.Int32 | Improve this Doc View Source t_procent procent Declaration public double t_procent Field Value Type Description System.Double | Improve this Doc View Source type type: 1 - shot results Declaration public int type Field Value Type Description System.Int32"
  },
  "api/TM/TMSrv.PFSProxyServer.html": {
    "href": "api/TM/TMSrv.PFSProxyServer.html",
    "title": "Class PFSProxyServer",
    "keywords": "Class PFSProxyServer Inheritance System.Object Server PFSProxyServer Implements System.IDisposable Inherited Members Server.Servers Server.DACADC_MAX_DAC Server.DACADC_MAX_ADC Server.handle Server.ip Server.port Server.ConnectType Server.ConnectAvailable Server.type Server.name Server.OnProcessing Server.COM Server.lnk Server.ControlID Server.ControlRight Server.Controls Server.ControlsCount Server.DevStatus Server.InWait Server.LogPath Server.NeedAutoReconnect Server.NeedForReconnect Server.buf Server.timeout Server.TimerTicks Server.TMSettings Server.traceToLog Server.update Server.UpdatePeriod Server.UpdateTimerID Server.configChanged Server.DS_LangText Server.AfterTryConnect Server.AfterDisconnect Server.Disconnect Server.Connect Server.ChangeDevicesStatus Server.FreeServerData Server.ParseIncomingPacket Server.PostParseData Server.MakeCommand Server.Client Server.ServerData Server.Dispose() Server.Dispose(Boolean) Server.AddServer(String, String, Int32, EServerType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class PFSProxyServer : Server, IDisposable Implements System.IDisposable"
  },
  "api/TM/TMSrv.PFSServer.html": {
    "href": "api/TM/TMSrv.PFSServer.html",
    "title": "Class PFSServer",
    "keywords": "Class PFSServer Inheritance System.Object Server PFSServer Implements System.IDisposable Inherited Members Server.Servers Server.DACADC_MAX_DAC Server.DACADC_MAX_ADC Server.handle Server.ip Server.port Server.ConnectType Server.ConnectAvailable Server.type Server.name Server.OnProcessing Server.COM Server.lnk Server.ControlID Server.ControlRight Server.Controls Server.ControlsCount Server.DevStatus Server.InWait Server.LogPath Server.NeedAutoReconnect Server.NeedForReconnect Server.buf Server.timeout Server.TimerTicks Server.TMSettings Server.traceToLog Server.update Server.UpdatePeriod Server.UpdateTimerID Server.configChanged Server.DS_LangText Server.AfterTryConnect Server.AfterDisconnect Server.Disconnect Server.Connect Server.ChangeDevicesStatus Server.FreeServerData Server.ParseIncomingPacket Server.PostParseData Server.MakeCommand Server.Client Server.ServerData Server.Dispose() Server.Dispose(Boolean) Server.AddServer(String, String, Int32, EServerType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class PFSServer : Server, IDisposable Implements System.IDisposable"
  },
  "api/TM/TMSrv.Server.html": {
    "href": "api/TM/TMSrv.Server.html",
    "title": "Class Server",
    "keywords": "Class Server универсальный сервер - источник данных для подключения к разным источникам данных: TCP серверам по протоколу TM, устройствам через линклиб или com порт Inheritance System.Object Server ACCServer ECServer MainCServer PFSProxyServer PFSServer TermoServer XRayServer Implements System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class Server : IDisposable Fields | Improve this Doc View Source Client Declaration public Client Client Field Value Type Description Client | Improve this Doc View Source Controls интерфейсные контролы Declaration public List<VCControl> Controls Field Value Type Description System.Collections.Generic.List < VCControl > | Improve this Doc View Source DACADC_MAX_ADC максимальное количество каналов в сервере Declaration public static byte DACADC_MAX_ADC Field Value Type Description System.Byte | Improve this Doc View Source DACADC_MAX_DAC максимальное количество каналов в сервере Declaration public static byte DACADC_MAX_DAC Field Value Type Description System.Byte | Improve this Doc View Source DS_LangText ошибки, выбираемые RS485_GetErrorMessage Declaration public static Dictionary<int, string[]> DS_LangText Field Value Type Description System.Collections.Generic.Dictionary < System.Int32 , System.String []> | Improve this Doc View Source ServerData уникальная начинка сервера в соответствии с типом Declaration public object ServerData Field Value Type Description System.Object | Improve this Doc View Source Servers Declaration public static List<Server> Servers Field Value Type Description System.Collections.Generic.List < Server > Properties | Improve this Doc View Source buf строковый буфер для временного хранения сообщений Declaration public string buf { get; set; } Property Value Type Description System.String | Improve this Doc View Source COM Declaration public ComPortData COM { get; set; } Property Value Type Description ComPortData | Improve this Doc View Source configChanged флаг - изменилась аппаратная конфигурация - надо разослать инф. клиентам Declaration public byte configChanged { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source ConnectAvailable возможные (реализованные) способы подключения, напр. SERVER_CONNESERVER_ConnectType_DIRECT Declaration public EConnectType ConnectAvailable { get; set; } Property Value Type Description EConnectType | Improve this Doc View Source ConnectType тип подключения: linklib, TMProtocol или локальное SERVER_ConnectType_TMPROTOCOL Declaration public EConnectType ConnectType { get; set; } Property Value Type Description EConnectType | Improve this Doc View Source ControlID id контрола, отображающего коннект к серверу Declaration public int ControlID { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ControlRight правая граница контрола, для выстраивания цепочки Declaration public int ControlRight { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ControlsCount количество интерфейсных контролов Declaration public int ControlsCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DevStatus статус устройства - напр. DEVICE_STATUS_OK Declaration public EDeviceStatus DevStatus { get; set; } Property Value Type Description EDeviceStatus | Improve this Doc View Source handle название устройства для вывода сообщений в консоль для коммуникации. -1 если не используется сейчас, 0+ если канал действует. Declaration public int handle { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source InWait сервер в режиме ожидания ответа от железа Declaration public byte InWait { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source ip IP (= \"127.0.0.1\") Declaration public string ip { get; set; } Property Value Type Description System.String | Improve this Doc View Source lnk Declaration public TmLnk lnk { get; set; } Property Value Type Description TmLnk | Improve this Doc View Source LogPath The log path Declaration public string LogPath { get; set; } Property Value Type Description System.String | Improve this Doc View Source name имя сервера Declaration public string name { get; set; } Property Value Type Description System.String | Improve this Doc View Source NeedAutoReconnect автоматическое подключение Declaration public int NeedAutoReconnect { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NeedForReconnect необходимость восстановления соединения в текущем сеансе Declaration public int NeedForReconnect { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source OnProcessing флаг - сервер находится в процессе, удаление требует ожидания Declaration public int OnProcessing { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source port Порт (= 9995) Declaration public int port { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source timeout таймаут ожидания ответа от железа (задействован в термоконтроле), секунды Declaration public float timeout { get; set; } Property Value Type Description System.Single | Improve this Doc View Source TimerTicks Cчетчик тиков. Сбрасывается при пришедших от сервера данных Declaration public int TimerTicks { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TMSettings битовое поле, настройки протокола взаимодействия - TMSettings_ADDCHECKSUMM Declaration public byte TMSettings { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source traceToLog флаг - сохранять обмен пакетами с устройством в лог LogPath Declaration public byte traceToLog { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source type тип сервера 0-неизвестный, SERVER_TYPE_TEMPERATURE и т.д Declaration public EServerType type { get; set; } Property Value Type Description EServerType | Improve this Doc View Source update счетчик апдейтов Declaration public byte update { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source UpdatePeriod интервал таймера в секундах Declaration public float UpdatePeriod { get; set; } Property Value Type Description System.Single | Improve this Doc View Source UpdateTimerID таймер периодических опросов. заводится и стартует из StartUpdateTimer Declaration public int UpdateTimerID { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AddServer(String, String, Int32, EServerType) Declaration public virtual int AddServer(string name, string ip, int port, EServerType type) Parameters Type Name Description System.String name System.String ip System.Int32 port EServerType type Returns Type Description System.Int32 | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Events | Improve this Doc View Source AfterDisconnect дополнительный обработчик после дисконнекта, вызывается в DisconnectFix Declaration public event ConnectHandler AfterDisconnect Event Type Type Description ConnectHandler | Improve this Doc View Source AfterTryConnect дополнительный обработчик после коннекта, вызывается в ConnectToServer Declaration public event ConnectHandler AfterTryConnect Event Type Type Description ConnectHandler | Improve this Doc View Source ChangeDevicesStatus переопределенная функция Declaration public event ServerHandler ChangeDevicesStatus Event Type Type Description ServerHandler | Improve this Doc View Source Connect специализированный коннект. Если задан он, то используется он в ConnectToServer Declaration public event ConnectHandler Connect Event Type Type Description ConnectHandler | Improve this Doc View Source Disconnect дополнительный обработчик после дисконнекта, вызывается в DisconnectFix Declaration public event ConnectHandler Disconnect Event Type Type Description ConnectHandler | Improve this Doc View Source FreeServerData доп. функция освобождения серверных данных. Declaration public event ServerHandler FreeServerData Event Type Type Description ServerHandler | Improve this Doc View Source MakeCommand внешняя функция для формирования команды к устройству. Напр. PFS_MakeCommand Termo_MakeCommand XRAY_MakeCommand TermoL_MakeCommand ACC_MakeCommand Declaration public event MakeCommandHandler MakeCommand Event Type Type Description MakeCommandHandler | Improve this Doc View Source ParseIncomingPacket дополнительный обработчик входящего пакета для ParseIncommingPacketTM Declaration public event IncomingPacketHandler ParseIncomingPacket Event Type Type Description IncomingPacketHandler | Improve this Doc View Source PostParseData указатель на функцию - дополнительный обработчик входящих команд. Вызывается после обработки данных, например, для доп.реакции по отображению данных использовать необязательно для PFS - параметры cmd и cid из пришедшей команды для остальных - тип пакета и вид данных вызывается из парсера TMCPFS_PostParseData, Kr_PostParseData Declaration public event PostParseHandler PostParseData Event Type Type Description PostParseHandler Implements System.IDisposable"
  },
  "api/TM/TMSrv.Server.ntm.html": {
    "href": "api/TM/TMSrv.Server.ntm.html",
    "title": "Struct Server.ntm",
    "keywords": "Struct Server.ntm для пакетов, реализующих какой-то уникальный протокол Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMSrv Assembly : TM.dll Syntax public struct ntm Properties | Improve this Doc View Source waitpacketsize текущий ожидаемый размер пакета. Если 0, то вычитвается максимально возможное количество байт Declaration public int waitpacketsize { get; set; } Property Value Type Description System.Int32"
  },
  "api/TM/TMSrv.ServerState.html": {
    "href": "api/TM/TMSrv.ServerState.html",
    "title": "Struct ServerState",
    "keywords": "Struct ServerState состояние сервера MainCServer - структура ServerData в DataServer Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMSrv Assembly : TM.dll Syntax public struct ServerState Fields | Improve this Doc View Source count текущий размер массива (кол-во элементов) Declaration public int count Field Value Type Description System.Int32 | Improve this Doc View Source elsize размер элемента (байт) == TMPlan.Spot.Length Declaration public int elsize Field Value Type Description System.Int32 | Improve this Doc View Source incsize приращение массива Declaration public int incsize Field Value Type Description System.Int32 | Improve this Doc View Source lasterror последняя возникшая ошибка, приведшая к отказу - MCS_ERR_NOERROR Declaration public uint lasterror Field Value Type Description System.UInt32 | Improve this Doc View Source Length The length of structure Declaration public static uint Length Field Value Type Description System.UInt32 | Improve this Doc View Source pcount_passed количество выпущенных протонов по плану Declaration public float pcount_passed Field Value Type Description System.Single | Improve this Doc View Source plan_finished флаг - план исполнен, для предотвращения повторного запуска плана Declaration public uint plan_finished Field Value Type Description System.UInt32 | Improve this Doc View Source progress прогресс исполнения текущего плана Declaration public double progress Field Value Type Description System.Double | Improve this Doc View Source progress_new прогресс исполнения текущего плана (присланный сервером) Declaration public double progress_new Field Value Type Description System.Double | Improve this Doc View Source size размер массива (кол-во элементов) Declaration public int size Field Value Type Description System.Int32 | Improve this Doc View Source spots_on_remote количество выстрелов в плане на удаленном сервере Declaration public uint spots_on_remote Field Value Type Description System.UInt32 | Improve this Doc View Source spots_passed количество уже произведенных выстрелов в плане Declaration public uint spots_passed Field Value Type Description System.UInt32 | Improve this Doc View Source spots_pcount суммарное количество протонов для пересчета исполнения Declaration public double spots_pcount Field Value Type Description System.Double | Improve this Doc View Source startTime время старта облучения возвращенное Timer() Declaration public float startTime Field Value Type Description System.Single | Improve this Doc View Source state текущее состояние транслятора или симулятора - MCS_STATE_READY Declaration public uint state Field Value Type Description System.UInt32 | Improve this Doc View Source stateMC текущее состояние сервера MainControl - MC_STATE_READY Declaration public int stateMC Field Value Type Description System.Int32 | Improve this Doc View Source stateMC_changed флаг - состояние изменилось, требуется рассылка клиентам Declaration public int stateMC_changed Field Value Type Description System.Int32 | Improve this Doc View Source time общее время выполнения облучения Declaration public float time Field Value Type Description System.Single | Improve this Doc View Source waitshots_count The waitshots count Declaration public uint waitshots_count Field Value Type Description System.UInt32"
  },
  "api/TM/TMSrv.StateData.html": {
    "href": "api/TM/TMSrv.StateData.html",
    "title": "Struct StateData",
    "keywords": "Struct StateData состояние сервера - структура для пересылки Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : TMSrv Assembly : TM.dll Syntax public struct StateData Fields | Improve this Doc View Source lasterror ошибка выполнения крайней команды из списка ошибок - MCS_ERR_NOERROR Declaration public uint lasterror Field Value Type Description System.UInt32 | Improve this Doc View Source Length The length of State2Pass structure Declaration public static uint Length Field Value Type Description System.UInt32 | Improve this Doc View Source spots_count количество загруженных выстрелов в плане Declaration public uint spots_count Field Value Type Description System.UInt32 | Improve this Doc View Source spots_passed количество уже произведенных выстрелов в плане Declaration public uint spots_passed Field Value Type Description System.UInt32 | Improve this Doc View Source state текущее состояние сервера из списка состояний - EProccessState Declaration public int state Field Value Type Description System.Int32 Methods | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/TM/TMSrv.TermoServer.html": {
    "href": "api/TM/TMSrv.TermoServer.html",
    "title": "Class TermoServer",
    "keywords": "Class TermoServer Inheritance System.Object Server TermoServer Implements System.IDisposable Inherited Members Server.Servers Server.DACADC_MAX_DAC Server.DACADC_MAX_ADC Server.handle Server.ip Server.port Server.ConnectType Server.ConnectAvailable Server.type Server.name Server.OnProcessing Server.COM Server.lnk Server.ControlID Server.ControlRight Server.Controls Server.ControlsCount Server.DevStatus Server.InWait Server.LogPath Server.NeedAutoReconnect Server.NeedForReconnect Server.buf Server.timeout Server.TimerTicks Server.TMSettings Server.traceToLog Server.update Server.UpdatePeriod Server.UpdateTimerID Server.configChanged Server.DS_LangText Server.AfterTryConnect Server.AfterDisconnect Server.Disconnect Server.Connect Server.ChangeDevicesStatus Server.FreeServerData Server.ParseIncomingPacket Server.PostParseData Server.MakeCommand Server.Client Server.ServerData Server.Dispose() Server.Dispose(Boolean) Server.AddServer(String, String, Int32, EServerType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class TermoServer : Server, IDisposable Implements System.IDisposable"
  },
  "api/TM/TMSrv.TmLnk.html": {
    "href": "api/TM/TMSrv.TmLnk.html",
    "title": "Class TmLnk",
    "keywords": "Class TmLnk Inheritance System.Object TmLnk Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class TmLnk Properties | Improve this Doc View Source asknum Declaration public int asknum { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RQ Declaration public ushort RQ { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source sid Declaration public int sid { get; set; } Property Value Type Description System.Int32"
  },
  "api/TM/TMSrv.VCControl.html": {
    "href": "api/TM/TMSrv.VCControl.html",
    "title": "Class VCControl",
    "keywords": "Class VCControl визуализация датчика. Добавляется серверу посредством AddVCControl Inheritance System.Object VCControl Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class VCControl"
  },
  "api/TM/TMSrv.XRayServer.html": {
    "href": "api/TM/TMSrv.XRayServer.html",
    "title": "Class XRayServer",
    "keywords": "Class XRayServer Inheritance System.Object Server XRayServer Implements System.IDisposable Inherited Members Server.Servers Server.DACADC_MAX_DAC Server.DACADC_MAX_ADC Server.handle Server.ip Server.port Server.ConnectType Server.ConnectAvailable Server.type Server.name Server.OnProcessing Server.COM Server.lnk Server.ControlID Server.ControlRight Server.Controls Server.ControlsCount Server.DevStatus Server.InWait Server.LogPath Server.NeedAutoReconnect Server.NeedForReconnect Server.buf Server.timeout Server.TimerTicks Server.TMSettings Server.traceToLog Server.update Server.UpdatePeriod Server.UpdateTimerID Server.configChanged Server.DS_LangText Server.AfterTryConnect Server.AfterDisconnect Server.Disconnect Server.Connect Server.ChangeDevicesStatus Server.FreeServerData Server.ParseIncomingPacket Server.PostParseData Server.MakeCommand Server.Client Server.ServerData Server.Dispose() Server.Dispose(Boolean) Server.AddServer(String, String, Int32, EServerType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : TMSrv Assembly : TM.dll Syntax public class XRayServer : Server, IDisposable Implements System.IDisposable"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "",
    "keywords": "Описание библиотеки"
  },
  "articles/overview.html": {
    "href": "articles/overview.html",
    "title": "",
    "keywords": "!!! Внимание !!! 04.04.2021 - проект в процессе переделки Проект содержит код библиотеки TM.dll для обмена данными по TM протоколу. Библиотека также содержит CmdLet классы и может использоваться, как PowerShell модуль. Документация (описание классов, структур, методов и функций) содержится в: https://x2v0.github.io/TM/docs"
  },
  "index.html": {
    "href": "index.html",
    "title": "Библиотека для работы с протоколом TM",
    "keywords": "Библиотека для работы с протоколом TM C# реализация сетевого протокола обмена данными TM Исходники на github Документация Список классов и структур Описание библиотеки"
  },
  "README.html": {
    "href": "README.html",
    "title": "To Generate the Docs",
    "keywords": "This folder generates the API docs for TM. The API documentation is generated using the DocFX tool . The output of docfx gets put into the ./docs folder which is then checked in. The ./docs folder is then picked up by Github Pages and published to Miguel's Github Pages ( https://migueldeicaza.github.io/gui.cs/ ). To Generate the Docs Install DotFX https://dotnet.github.io/docfx/tutorial/docfx_getting_started.html Change to the ./docfx folder and run ./build.ps1 Browse to http://localhost:8080 and verify everything looks good. Hit ctrl-c to stop the script."
  }
}